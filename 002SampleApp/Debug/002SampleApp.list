
002SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000016ec  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a4  0800189c  0800189c  0001189c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001a40  08001a40  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001a40  08001a40  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001a40  08001a40  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001a40  08001a40  00011a40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001a44  08001a44  00011a44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001a48  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000200ac  2**0
                  CONTENTS
 10 .bss          00000030  200000ac  200000ac  000200ac  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200000dc  200000dc  000200ac  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b28  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003d5  00000000  00000000  00020c04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  00020fe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000100  00000000  00000000  00021118  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002b21  00000000  00000000  00021218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000148a  00000000  00000000  00023d39  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009399  00000000  00000000  000251c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e55c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000ecc  00000000  00000000  0002e5ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001884 	.word	0x08001884

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	08001884 	.word	0x08001884

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b084      	sub	sp, #16
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800029a:	2300      	movs	r3, #0
 800029c:	60fb      	str	r3, [r7, #12]
 800029e:	e015      	b.n	80002cc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002a0:	f000 fa70 	bl	8000784 <rand>
 80002a4:	4602      	mov	r2, r0
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	6879      	ldr	r1, [r7, #4]
 80002ac:	4419      	add	r1, r3
 80002ae:	4b0c      	ldr	r3, [pc, #48]	; (80002e0 <array_fill_numbers+0x50>)
 80002b0:	fb83 0302 	smull	r0, r3, r3, r2
 80002b4:	1198      	asrs	r0, r3, #6
 80002b6:	17d3      	asrs	r3, r2, #31
 80002b8:	1ac3      	subs	r3, r0, r3
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	fb00 f303 	mul.w	r3, r0, r3
 80002c2:	1ad3      	subs	r3, r2, r3
 80002c4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	68fa      	ldr	r2, [r7, #12]
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d3e5      	bcc.n	80002a0 <array_fill_numbers+0x10>
    }

}
 80002d4:	bf00      	nop
 80002d6:	bf00      	nop
 80002d8:	3710      	adds	r7, #16
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	10624dd3 	.word	0x10624dd3

080002e4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b086      	sub	sp, #24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	60f8      	str	r0, [r7, #12]
 80002ec:	60b9      	str	r1, [r7, #8]
 80002ee:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002f0:	6879      	ldr	r1, [r7, #4]
 80002f2:	480e      	ldr	r0, [pc, #56]	; (800032c <display_numbers+0x48>)
 80002f4:	f000 fa18 	bl	8000728 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00b      	b.n	8000316 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002fe:	697b      	ldr	r3, [r7, #20]
 8000300:	009b      	lsls	r3, r3, #2
 8000302:	68fa      	ldr	r2, [r7, #12]
 8000304:	4413      	add	r3, r2
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	4619      	mov	r1, r3
 800030a:	4809      	ldr	r0, [pc, #36]	; (8000330 <display_numbers+0x4c>)
 800030c:	f000 fa0c 	bl	8000728 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000310:	697b      	ldr	r3, [r7, #20]
 8000312:	3301      	adds	r3, #1
 8000314:	617b      	str	r3, [r7, #20]
 8000316:	697a      	ldr	r2, [r7, #20]
 8000318:	68bb      	ldr	r3, [r7, #8]
 800031a:	429a      	cmp	r2, r3
 800031c:	d3ef      	bcc.n	80002fe <display_numbers+0x1a>
    }

    printf("\n");
 800031e:	200a      	movs	r0, #10
 8000320:	f000 fa1a 	bl	8000758 <putchar>
}
 8000324:	bf00      	nop
 8000326:	3718      	adds	r7, #24
 8000328:	46bd      	mov	sp, r7
 800032a:	bd80      	pop	{r7, pc}
 800032c:	0800189c 	.word	0x0800189c
 8000330:	080018a0 	.word	0x080018a0

08000334 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000334:	b480      	push	{r7}
 8000336:	b085      	sub	sp, #20
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
 800033c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000344:	683b      	ldr	r3, [r7, #0]
 8000346:	681a      	ldr	r2, [r3, #0]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	68fa      	ldr	r2, [r7, #12]
 8000350:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000352:	4b04      	ldr	r3, [pc, #16]	; (8000364 <swap_numbers+0x30>)
 8000354:	220a      	movs	r2, #10
 8000356:	601a      	str	r2, [r3, #0]
}
 8000358:	bf00      	nop
 800035a:	3714      	adds	r7, #20
 800035c:	46bd      	mov	sp, r7
 800035e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000362:	4770      	bx	lr
 8000364:	20000044 	.word	0x20000044

08000368 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
 8000370:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000372:	2300      	movs	r3, #0
 8000374:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000376:	2300      	movs	r3, #0
 8000378:	617b      	str	r3, [r7, #20]
 800037a:	e02f      	b.n	80003dc <bubble_sort+0x74>
    {
        flag=0;
 800037c:	2300      	movs	r3, #0
 800037e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000380:	2300      	movs	r3, #0
 8000382:	613b      	str	r3, [r7, #16]
 8000384:	e01d      	b.n	80003c2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000386:	693b      	ldr	r3, [r7, #16]
 8000388:	009b      	lsls	r3, r3, #2
 800038a:	687a      	ldr	r2, [r7, #4]
 800038c:	4413      	add	r3, r2
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	693b      	ldr	r3, [r7, #16]
 8000392:	3301      	adds	r3, #1
 8000394:	009b      	lsls	r3, r3, #2
 8000396:	6879      	ldr	r1, [r7, #4]
 8000398:	440b      	add	r3, r1
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	429a      	cmp	r2, r3
 800039e:	dd0d      	ble.n	80003bc <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003a0:	693b      	ldr	r3, [r7, #16]
 80003a2:	009b      	lsls	r3, r3, #2
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	18d0      	adds	r0, r2, r3
 80003a8:	693b      	ldr	r3, [r7, #16]
 80003aa:	3301      	adds	r3, #1
 80003ac:	009b      	lsls	r3, r3, #2
 80003ae:	687a      	ldr	r2, [r7, #4]
 80003b0:	4413      	add	r3, r2
 80003b2:	4619      	mov	r1, r3
 80003b4:	f7ff ffbe 	bl	8000334 <swap_numbers>
                flag=1;
 80003b8:	2301      	movs	r3, #1
 80003ba:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003bc:	693b      	ldr	r3, [r7, #16]
 80003be:	3301      	adds	r3, #1
 80003c0:	613b      	str	r3, [r7, #16]
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	683a      	ldr	r2, [r7, #0]
 80003c6:	1ad3      	subs	r3, r2, r3
 80003c8:	1e5a      	subs	r2, r3, #1
 80003ca:	693b      	ldr	r3, [r7, #16]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	d8da      	bhi.n	8000386 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003d0:	68fb      	ldr	r3, [r7, #12]
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d008      	beq.n	80003e8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	3301      	adds	r3, #1
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	1e5a      	subs	r2, r3, #1
 80003e0:	697b      	ldr	r3, [r7, #20]
 80003e2:	429a      	cmp	r2, r3
 80003e4:	d8ca      	bhi.n	800037c <bubble_sort+0x14>
            break;
    }
}
 80003e6:	e000      	b.n	80003ea <bubble_sort+0x82>
            break;
 80003e8:	bf00      	nop
}
 80003ea:	bf00      	nop
 80003ec:	3718      	adds	r7, #24
 80003ee:	46bd      	mov	sp, r7
 80003f0:	bd80      	pop	{r7, pc}

080003f2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b087      	sub	sp, #28
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
 80003fa:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003fc:	2301      	movs	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	e02c      	b.n	800045c <insertion_sort+0x6a>
     {
         j=i-1;
 8000402:	697b      	ldr	r3, [r7, #20]
 8000404:	3b01      	subs	r3, #1
 8000406:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	009b      	lsls	r3, r3, #2
 800040c:	687a      	ldr	r2, [r7, #4]
 800040e:	4413      	add	r3, r2
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000414:	e00d      	b.n	8000432 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000416:	693b      	ldr	r3, [r7, #16]
 8000418:	009b      	lsls	r3, r3, #2
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	441a      	add	r2, r3
 800041e:	693b      	ldr	r3, [r7, #16]
 8000420:	3301      	adds	r3, #1
 8000422:	009b      	lsls	r3, r3, #2
 8000424:	6879      	ldr	r1, [r7, #4]
 8000426:	440b      	add	r3, r1
 8000428:	6812      	ldr	r2, [r2, #0]
 800042a:	601a      	str	r2, [r3, #0]
             j--;
 800042c:	693b      	ldr	r3, [r7, #16]
 800042e:	3b01      	subs	r3, #1
 8000430:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000432:	693b      	ldr	r3, [r7, #16]
 8000434:	2b00      	cmp	r3, #0
 8000436:	db07      	blt.n	8000448 <insertion_sort+0x56>
 8000438:	693b      	ldr	r3, [r7, #16]
 800043a:	009b      	lsls	r3, r3, #2
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	4413      	add	r3, r2
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	68fa      	ldr	r2, [r7, #12]
 8000444:	429a      	cmp	r2, r3
 8000446:	dbe6      	blt.n	8000416 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000448:	693b      	ldr	r3, [r7, #16]
 800044a:	3301      	adds	r3, #1
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	4413      	add	r3, r2
 8000452:	68fa      	ldr	r2, [r7, #12]
 8000454:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000456:	697b      	ldr	r3, [r7, #20]
 8000458:	3301      	adds	r3, #1
 800045a:	617b      	str	r3, [r7, #20]
 800045c:	697b      	ldr	r3, [r7, #20]
 800045e:	683a      	ldr	r2, [r7, #0]
 8000460:	429a      	cmp	r2, r3
 8000462:	d8ce      	bhi.n	8000402 <insertion_sort+0x10>
     }


}
 8000464:	bf00      	nop
 8000466:	bf00      	nop
 8000468:	371c      	adds	r7, #28
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr
	...

08000474 <main>:



int main()
{
 8000474:	b580      	push	{r7, lr}
 8000476:	b082      	sub	sp, #8
 8000478:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800047a:	2311      	movs	r3, #17
 800047c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800047e:	6879      	ldr	r1, [r7, #4]
 8000480:	4813      	ldr	r0, [pc, #76]	; (80004d0 <main+0x5c>)
 8000482:	f7ff ff05 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000486:	4a13      	ldr	r2, [pc, #76]	; (80004d4 <main+0x60>)
 8000488:	6879      	ldr	r1, [r7, #4]
 800048a:	4811      	ldr	r0, [pc, #68]	; (80004d0 <main+0x5c>)
 800048c:	f7ff ff2a 	bl	80002e4 <display_numbers>

    bubble_sort(numbers,len);
 8000490:	6879      	ldr	r1, [r7, #4]
 8000492:	480f      	ldr	r0, [pc, #60]	; (80004d0 <main+0x5c>)
 8000494:	f7ff ff68 	bl	8000368 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000498:	4a0f      	ldr	r2, [pc, #60]	; (80004d8 <main+0x64>)
 800049a:	6879      	ldr	r1, [r7, #4]
 800049c:	480c      	ldr	r0, [pc, #48]	; (80004d0 <main+0x5c>)
 800049e:	f7ff ff21 	bl	80002e4 <display_numbers>

    array_fill_numbers(numbers,len);
 80004a2:	6879      	ldr	r1, [r7, #4]
 80004a4:	480a      	ldr	r0, [pc, #40]	; (80004d0 <main+0x5c>)
 80004a6:	f7ff fef3 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004aa:	4a0c      	ldr	r2, [pc, #48]	; (80004dc <main+0x68>)
 80004ac:	6879      	ldr	r1, [r7, #4]
 80004ae:	4808      	ldr	r0, [pc, #32]	; (80004d0 <main+0x5c>)
 80004b0:	f7ff ff18 	bl	80002e4 <display_numbers>

    insertion_sort(numbers,len);
 80004b4:	6879      	ldr	r1, [r7, #4]
 80004b6:	4806      	ldr	r0, [pc, #24]	; (80004d0 <main+0x5c>)
 80004b8:	f7ff ff9b 	bl	80003f2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004bc:	4a08      	ldr	r2, [pc, #32]	; (80004e0 <main+0x6c>)
 80004be:	6879      	ldr	r1, [r7, #4]
 80004c0:	4803      	ldr	r0, [pc, #12]	; (80004d0 <main+0x5c>)
 80004c2:	f7ff ff0f 	bl	80002e4 <display_numbers>



    return 0;
 80004c6:	2300      	movs	r3, #0
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	3708      	adds	r7, #8
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bd80      	pop	{r7, pc}
 80004d0:	20000000 	.word	0x20000000
 80004d4:	080018a8 	.word	0x080018a8
 80004d8:	080018bc 	.word	0x080018bc
 80004dc:	080018d0 	.word	0x080018d0
 80004e0:	080018e4 	.word	0x080018e4

080004e4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80004e4:	b480      	push	{r7}
 80004e6:	af00      	add	r7, sp, #0
	return 1;
 80004e8:	2301      	movs	r3, #1
}
 80004ea:	4618      	mov	r0, r3
 80004ec:	46bd      	mov	sp, r7
 80004ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f2:	4770      	bx	lr

080004f4 <_kill>:

int _kill(int pid, int sig)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b082      	sub	sp, #8
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80004fe:	f000 f8e1 	bl	80006c4 <__errno>
 8000502:	4603      	mov	r3, r0
 8000504:	2216      	movs	r2, #22
 8000506:	601a      	str	r2, [r3, #0]
	return -1;
 8000508:	f04f 33ff 	mov.w	r3, #4294967295
}
 800050c:	4618      	mov	r0, r3
 800050e:	3708      	adds	r7, #8
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}

08000514 <_exit>:

void _exit (int status)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b082      	sub	sp, #8
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800051c:	f04f 31ff 	mov.w	r1, #4294967295
 8000520:	6878      	ldr	r0, [r7, #4]
 8000522:	f7ff ffe7 	bl	80004f4 <_kill>
	while (1) {}		/* Make sure we hang here */
 8000526:	e7fe      	b.n	8000526 <_exit+0x12>

08000528 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000528:	b580      	push	{r7, lr}
 800052a:	b086      	sub	sp, #24
 800052c:	af00      	add	r7, sp, #0
 800052e:	60f8      	str	r0, [r7, #12]
 8000530:	60b9      	str	r1, [r7, #8]
 8000532:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000534:	2300      	movs	r3, #0
 8000536:	617b      	str	r3, [r7, #20]
 8000538:	e00a      	b.n	8000550 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800053a:	f3af 8000 	nop.w
 800053e:	4601      	mov	r1, r0
 8000540:	68bb      	ldr	r3, [r7, #8]
 8000542:	1c5a      	adds	r2, r3, #1
 8000544:	60ba      	str	r2, [r7, #8]
 8000546:	b2ca      	uxtb	r2, r1
 8000548:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800054a:	697b      	ldr	r3, [r7, #20]
 800054c:	3301      	adds	r3, #1
 800054e:	617b      	str	r3, [r7, #20]
 8000550:	697a      	ldr	r2, [r7, #20]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	429a      	cmp	r2, r3
 8000556:	dbf0      	blt.n	800053a <_read+0x12>
	}

return len;
 8000558:	687b      	ldr	r3, [r7, #4]
}
 800055a:	4618      	mov	r0, r3
 800055c:	3718      	adds	r7, #24
 800055e:	46bd      	mov	sp, r7
 8000560:	bd80      	pop	{r7, pc}

08000562 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000562:	b580      	push	{r7, lr}
 8000564:	b086      	sub	sp, #24
 8000566:	af00      	add	r7, sp, #0
 8000568:	60f8      	str	r0, [r7, #12]
 800056a:	60b9      	str	r1, [r7, #8]
 800056c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800056e:	2300      	movs	r3, #0
 8000570:	617b      	str	r3, [r7, #20]
 8000572:	e009      	b.n	8000588 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000574:	68bb      	ldr	r3, [r7, #8]
 8000576:	1c5a      	adds	r2, r3, #1
 8000578:	60ba      	str	r2, [r7, #8]
 800057a:	781b      	ldrb	r3, [r3, #0]
 800057c:	4618      	mov	r0, r3
 800057e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000582:	697b      	ldr	r3, [r7, #20]
 8000584:	3301      	adds	r3, #1
 8000586:	617b      	str	r3, [r7, #20]
 8000588:	697a      	ldr	r2, [r7, #20]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	429a      	cmp	r2, r3
 800058e:	dbf1      	blt.n	8000574 <_write+0x12>
	}
	return len;
 8000590:	687b      	ldr	r3, [r7, #4]
}
 8000592:	4618      	mov	r0, r3
 8000594:	3718      	adds	r7, #24
 8000596:	46bd      	mov	sp, r7
 8000598:	bd80      	pop	{r7, pc}

0800059a <_close>:

int _close(int file)
{
 800059a:	b480      	push	{r7}
 800059c:	b083      	sub	sp, #12
 800059e:	af00      	add	r7, sp, #0
 80005a0:	6078      	str	r0, [r7, #4]
	return -1;
 80005a2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005a6:	4618      	mov	r0, r3
 80005a8:	370c      	adds	r7, #12
 80005aa:	46bd      	mov	sp, r7
 80005ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b0:	4770      	bx	lr

080005b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005b2:	b480      	push	{r7}
 80005b4:	b083      	sub	sp, #12
 80005b6:	af00      	add	r7, sp, #0
 80005b8:	6078      	str	r0, [r7, #4]
 80005ba:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80005bc:	683b      	ldr	r3, [r7, #0]
 80005be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005c2:	605a      	str	r2, [r3, #4]
	return 0;
 80005c4:	2300      	movs	r3, #0
}
 80005c6:	4618      	mov	r0, r3
 80005c8:	370c      	adds	r7, #12
 80005ca:	46bd      	mov	sp, r7
 80005cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d0:	4770      	bx	lr

080005d2 <_isatty>:

int _isatty(int file)
{
 80005d2:	b480      	push	{r7}
 80005d4:	b083      	sub	sp, #12
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	6078      	str	r0, [r7, #4]
	return 1;
 80005da:	2301      	movs	r3, #1
}
 80005dc:	4618      	mov	r0, r3
 80005de:	370c      	adds	r7, #12
 80005e0:	46bd      	mov	sp, r7
 80005e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e6:	4770      	bx	lr

080005e8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005e8:	b480      	push	{r7}
 80005ea:	b085      	sub	sp, #20
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	60f8      	str	r0, [r7, #12]
 80005f0:	60b9      	str	r1, [r7, #8]
 80005f2:	607a      	str	r2, [r7, #4]
	return 0;
 80005f4:	2300      	movs	r3, #0
}
 80005f6:	4618      	mov	r0, r3
 80005f8:	3714      	adds	r7, #20
 80005fa:	46bd      	mov	sp, r7
 80005fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000600:	4770      	bx	lr
	...

08000604 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000604:	b580      	push	{r7, lr}
 8000606:	b086      	sub	sp, #24
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800060c:	4a14      	ldr	r2, [pc, #80]	; (8000660 <_sbrk+0x5c>)
 800060e:	4b15      	ldr	r3, [pc, #84]	; (8000664 <_sbrk+0x60>)
 8000610:	1ad3      	subs	r3, r2, r3
 8000612:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000614:	697b      	ldr	r3, [r7, #20]
 8000616:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000618:	4b13      	ldr	r3, [pc, #76]	; (8000668 <_sbrk+0x64>)
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	2b00      	cmp	r3, #0
 800061e:	d102      	bne.n	8000626 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000620:	4b11      	ldr	r3, [pc, #68]	; (8000668 <_sbrk+0x64>)
 8000622:	4a12      	ldr	r2, [pc, #72]	; (800066c <_sbrk+0x68>)
 8000624:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000626:	4b10      	ldr	r3, [pc, #64]	; (8000668 <_sbrk+0x64>)
 8000628:	681a      	ldr	r2, [r3, #0]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4413      	add	r3, r2
 800062e:	693a      	ldr	r2, [r7, #16]
 8000630:	429a      	cmp	r2, r3
 8000632:	d207      	bcs.n	8000644 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000634:	f000 f846 	bl	80006c4 <__errno>
 8000638:	4603      	mov	r3, r0
 800063a:	220c      	movs	r2, #12
 800063c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800063e:	f04f 33ff 	mov.w	r3, #4294967295
 8000642:	e009      	b.n	8000658 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000644:	4b08      	ldr	r3, [pc, #32]	; (8000668 <_sbrk+0x64>)
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800064a:	4b07      	ldr	r3, [pc, #28]	; (8000668 <_sbrk+0x64>)
 800064c:	681a      	ldr	r2, [r3, #0]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	4413      	add	r3, r2
 8000652:	4a05      	ldr	r2, [pc, #20]	; (8000668 <_sbrk+0x64>)
 8000654:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000656:	68fb      	ldr	r3, [r7, #12]
}
 8000658:	4618      	mov	r0, r3
 800065a:	3718      	adds	r7, #24
 800065c:	46bd      	mov	sp, r7
 800065e:	bd80      	pop	{r7, pc}
 8000660:	20020000 	.word	0x20020000
 8000664:	00000400 	.word	0x00000400
 8000668:	200000c8 	.word	0x200000c8
 800066c:	200000e0 	.word	0x200000e0

08000670 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000670:	480d      	ldr	r0, [pc, #52]	; (80006a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000672:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000674:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000678:	480c      	ldr	r0, [pc, #48]	; (80006ac <LoopForever+0x6>)
  ldr r1, =_edata
 800067a:	490d      	ldr	r1, [pc, #52]	; (80006b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800067c:	4a0d      	ldr	r2, [pc, #52]	; (80006b4 <LoopForever+0xe>)
  movs r3, #0
 800067e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000680:	e002      	b.n	8000688 <LoopCopyDataInit>

08000682 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000682:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000684:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000686:	3304      	adds	r3, #4

08000688 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000688:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800068a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800068c:	d3f9      	bcc.n	8000682 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800068e:	4a0a      	ldr	r2, [pc, #40]	; (80006b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000690:	4c0a      	ldr	r4, [pc, #40]	; (80006bc <LoopForever+0x16>)
  movs r3, #0
 8000692:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000694:	e001      	b.n	800069a <LoopFillZerobss>

08000696 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000696:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000698:	3204      	adds	r2, #4

0800069a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800069a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800069c:	d3fb      	bcc.n	8000696 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800069e:	f000 f817 	bl	80006d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006a2:	f7ff fee7 	bl	8000474 <main>

080006a6 <LoopForever>:

LoopForever:
    b LoopForever
 80006a6:	e7fe      	b.n	80006a6 <LoopForever>
  ldr   r0, =_estack
 80006a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006b0:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006b4:	08001a48 	.word	0x08001a48
  ldr r2, =_sbss
 80006b8:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006bc:	200000dc 	.word	0x200000dc

080006c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006c0:	e7fe      	b.n	80006c0 <ADC_IRQHandler>
	...

080006c4 <__errno>:
 80006c4:	4b01      	ldr	r3, [pc, #4]	; (80006cc <__errno+0x8>)
 80006c6:	6818      	ldr	r0, [r3, #0]
 80006c8:	4770      	bx	lr
 80006ca:	bf00      	nop
 80006cc:	20000048 	.word	0x20000048

080006d0 <__libc_init_array>:
 80006d0:	b570      	push	{r4, r5, r6, lr}
 80006d2:	4d0d      	ldr	r5, [pc, #52]	; (8000708 <__libc_init_array+0x38>)
 80006d4:	4c0d      	ldr	r4, [pc, #52]	; (800070c <__libc_init_array+0x3c>)
 80006d6:	1b64      	subs	r4, r4, r5
 80006d8:	10a4      	asrs	r4, r4, #2
 80006da:	2600      	movs	r6, #0
 80006dc:	42a6      	cmp	r6, r4
 80006de:	d109      	bne.n	80006f4 <__libc_init_array+0x24>
 80006e0:	4d0b      	ldr	r5, [pc, #44]	; (8000710 <__libc_init_array+0x40>)
 80006e2:	4c0c      	ldr	r4, [pc, #48]	; (8000714 <__libc_init_array+0x44>)
 80006e4:	f001 f8ce 	bl	8001884 <_init>
 80006e8:	1b64      	subs	r4, r4, r5
 80006ea:	10a4      	asrs	r4, r4, #2
 80006ec:	2600      	movs	r6, #0
 80006ee:	42a6      	cmp	r6, r4
 80006f0:	d105      	bne.n	80006fe <__libc_init_array+0x2e>
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80006f8:	4798      	blx	r3
 80006fa:	3601      	adds	r6, #1
 80006fc:	e7ee      	b.n	80006dc <__libc_init_array+0xc>
 80006fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000702:	4798      	blx	r3
 8000704:	3601      	adds	r6, #1
 8000706:	e7f2      	b.n	80006ee <__libc_init_array+0x1e>
 8000708:	08001a40 	.word	0x08001a40
 800070c:	08001a40 	.word	0x08001a40
 8000710:	08001a40 	.word	0x08001a40
 8000714:	08001a44 	.word	0x08001a44

08000718 <memset>:
 8000718:	4402      	add	r2, r0
 800071a:	4603      	mov	r3, r0
 800071c:	4293      	cmp	r3, r2
 800071e:	d100      	bne.n	8000722 <memset+0xa>
 8000720:	4770      	bx	lr
 8000722:	f803 1b01 	strb.w	r1, [r3], #1
 8000726:	e7f9      	b.n	800071c <memset+0x4>

08000728 <iprintf>:
 8000728:	b40f      	push	{r0, r1, r2, r3}
 800072a:	4b0a      	ldr	r3, [pc, #40]	; (8000754 <iprintf+0x2c>)
 800072c:	b513      	push	{r0, r1, r4, lr}
 800072e:	681c      	ldr	r4, [r3, #0]
 8000730:	b124      	cbz	r4, 800073c <iprintf+0x14>
 8000732:	69a3      	ldr	r3, [r4, #24]
 8000734:	b913      	cbnz	r3, 800073c <iprintf+0x14>
 8000736:	4620      	mov	r0, r4
 8000738:	f000 f8d8 	bl	80008ec <__sinit>
 800073c:	ab05      	add	r3, sp, #20
 800073e:	9a04      	ldr	r2, [sp, #16]
 8000740:	68a1      	ldr	r1, [r4, #8]
 8000742:	9301      	str	r3, [sp, #4]
 8000744:	4620      	mov	r0, r4
 8000746:	f000 fa95 	bl	8000c74 <_vfiprintf_r>
 800074a:	b002      	add	sp, #8
 800074c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000750:	b004      	add	sp, #16
 8000752:	4770      	bx	lr
 8000754:	20000048 	.word	0x20000048

08000758 <putchar>:
 8000758:	4b09      	ldr	r3, [pc, #36]	; (8000780 <putchar+0x28>)
 800075a:	b513      	push	{r0, r1, r4, lr}
 800075c:	681c      	ldr	r4, [r3, #0]
 800075e:	4601      	mov	r1, r0
 8000760:	b134      	cbz	r4, 8000770 <putchar+0x18>
 8000762:	69a3      	ldr	r3, [r4, #24]
 8000764:	b923      	cbnz	r3, 8000770 <putchar+0x18>
 8000766:	9001      	str	r0, [sp, #4]
 8000768:	4620      	mov	r0, r4
 800076a:	f000 f8bf 	bl	80008ec <__sinit>
 800076e:	9901      	ldr	r1, [sp, #4]
 8000770:	68a2      	ldr	r2, [r4, #8]
 8000772:	4620      	mov	r0, r4
 8000774:	b002      	add	sp, #8
 8000776:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800077a:	f000 bd3f 	b.w	80011fc <_putc_r>
 800077e:	bf00      	nop
 8000780:	20000048 	.word	0x20000048

08000784 <rand>:
 8000784:	4b16      	ldr	r3, [pc, #88]	; (80007e0 <rand+0x5c>)
 8000786:	b510      	push	{r4, lr}
 8000788:	681c      	ldr	r4, [r3, #0]
 800078a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800078c:	b9b3      	cbnz	r3, 80007bc <rand+0x38>
 800078e:	2018      	movs	r0, #24
 8000790:	f000 f95e 	bl	8000a50 <malloc>
 8000794:	63a0      	str	r0, [r4, #56]	; 0x38
 8000796:	b928      	cbnz	r0, 80007a4 <rand+0x20>
 8000798:	4602      	mov	r2, r0
 800079a:	4b12      	ldr	r3, [pc, #72]	; (80007e4 <rand+0x60>)
 800079c:	4812      	ldr	r0, [pc, #72]	; (80007e8 <rand+0x64>)
 800079e:	214e      	movs	r1, #78	; 0x4e
 80007a0:	f000 f82e 	bl	8000800 <__assert_func>
 80007a4:	4a11      	ldr	r2, [pc, #68]	; (80007ec <rand+0x68>)
 80007a6:	4b12      	ldr	r3, [pc, #72]	; (80007f0 <rand+0x6c>)
 80007a8:	e9c0 2300 	strd	r2, r3, [r0]
 80007ac:	4b11      	ldr	r3, [pc, #68]	; (80007f4 <rand+0x70>)
 80007ae:	6083      	str	r3, [r0, #8]
 80007b0:	230b      	movs	r3, #11
 80007b2:	8183      	strh	r3, [r0, #12]
 80007b4:	2201      	movs	r2, #1
 80007b6:	2300      	movs	r3, #0
 80007b8:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80007bc:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 80007be:	4a0e      	ldr	r2, [pc, #56]	; (80007f8 <rand+0x74>)
 80007c0:	6920      	ldr	r0, [r4, #16]
 80007c2:	6963      	ldr	r3, [r4, #20]
 80007c4:	490d      	ldr	r1, [pc, #52]	; (80007fc <rand+0x78>)
 80007c6:	4342      	muls	r2, r0
 80007c8:	fb01 2203 	mla	r2, r1, r3, r2
 80007cc:	fba0 0101 	umull	r0, r1, r0, r1
 80007d0:	1c43      	adds	r3, r0, #1
 80007d2:	eb42 0001 	adc.w	r0, r2, r1
 80007d6:	e9c4 3004 	strd	r3, r0, [r4, #16]
 80007da:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80007de:	bd10      	pop	{r4, pc}
 80007e0:	20000048 	.word	0x20000048
 80007e4:	080018fc 	.word	0x080018fc
 80007e8:	08001913 	.word	0x08001913
 80007ec:	abcd330e 	.word	0xabcd330e
 80007f0:	e66d1234 	.word	0xe66d1234
 80007f4:	0005deec 	.word	0x0005deec
 80007f8:	5851f42d 	.word	0x5851f42d
 80007fc:	4c957f2d 	.word	0x4c957f2d

08000800 <__assert_func>:
 8000800:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000802:	4614      	mov	r4, r2
 8000804:	461a      	mov	r2, r3
 8000806:	4b09      	ldr	r3, [pc, #36]	; (800082c <__assert_func+0x2c>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	4605      	mov	r5, r0
 800080c:	68d8      	ldr	r0, [r3, #12]
 800080e:	b14c      	cbz	r4, 8000824 <__assert_func+0x24>
 8000810:	4b07      	ldr	r3, [pc, #28]	; (8000830 <__assert_func+0x30>)
 8000812:	9100      	str	r1, [sp, #0]
 8000814:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000818:	4906      	ldr	r1, [pc, #24]	; (8000834 <__assert_func+0x34>)
 800081a:	462b      	mov	r3, r5
 800081c:	f000 f8e4 	bl	80009e8 <fiprintf>
 8000820:	f000 fe5a 	bl	80014d8 <abort>
 8000824:	4b04      	ldr	r3, [pc, #16]	; (8000838 <__assert_func+0x38>)
 8000826:	461c      	mov	r4, r3
 8000828:	e7f3      	b.n	8000812 <__assert_func+0x12>
 800082a:	bf00      	nop
 800082c:	20000048 	.word	0x20000048
 8000830:	0800196e 	.word	0x0800196e
 8000834:	0800197b 	.word	0x0800197b
 8000838:	080019a9 	.word	0x080019a9

0800083c <std>:
 800083c:	2300      	movs	r3, #0
 800083e:	b510      	push	{r4, lr}
 8000840:	4604      	mov	r4, r0
 8000842:	e9c0 3300 	strd	r3, r3, [r0]
 8000846:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800084a:	6083      	str	r3, [r0, #8]
 800084c:	8181      	strh	r1, [r0, #12]
 800084e:	6643      	str	r3, [r0, #100]	; 0x64
 8000850:	81c2      	strh	r2, [r0, #14]
 8000852:	6183      	str	r3, [r0, #24]
 8000854:	4619      	mov	r1, r3
 8000856:	2208      	movs	r2, #8
 8000858:	305c      	adds	r0, #92	; 0x5c
 800085a:	f7ff ff5d 	bl	8000718 <memset>
 800085e:	4b05      	ldr	r3, [pc, #20]	; (8000874 <std+0x38>)
 8000860:	6263      	str	r3, [r4, #36]	; 0x24
 8000862:	4b05      	ldr	r3, [pc, #20]	; (8000878 <std+0x3c>)
 8000864:	62a3      	str	r3, [r4, #40]	; 0x28
 8000866:	4b05      	ldr	r3, [pc, #20]	; (800087c <std+0x40>)
 8000868:	62e3      	str	r3, [r4, #44]	; 0x2c
 800086a:	4b05      	ldr	r3, [pc, #20]	; (8000880 <std+0x44>)
 800086c:	6224      	str	r4, [r4, #32]
 800086e:	6323      	str	r3, [r4, #48]	; 0x30
 8000870:	bd10      	pop	{r4, pc}
 8000872:	bf00      	nop
 8000874:	080012ad 	.word	0x080012ad
 8000878:	080012cf 	.word	0x080012cf
 800087c:	08001307 	.word	0x08001307
 8000880:	0800132b 	.word	0x0800132b

08000884 <_cleanup_r>:
 8000884:	4901      	ldr	r1, [pc, #4]	; (800088c <_cleanup_r+0x8>)
 8000886:	f000 b8c1 	b.w	8000a0c <_fwalk_reent>
 800088a:	bf00      	nop
 800088c:	08001615 	.word	0x08001615

08000890 <__sfmoreglue>:
 8000890:	b570      	push	{r4, r5, r6, lr}
 8000892:	2268      	movs	r2, #104	; 0x68
 8000894:	1e4d      	subs	r5, r1, #1
 8000896:	4355      	muls	r5, r2
 8000898:	460e      	mov	r6, r1
 800089a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800089e:	f000 f94b 	bl	8000b38 <_malloc_r>
 80008a2:	4604      	mov	r4, r0
 80008a4:	b140      	cbz	r0, 80008b8 <__sfmoreglue+0x28>
 80008a6:	2100      	movs	r1, #0
 80008a8:	e9c0 1600 	strd	r1, r6, [r0]
 80008ac:	300c      	adds	r0, #12
 80008ae:	60a0      	str	r0, [r4, #8]
 80008b0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008b4:	f7ff ff30 	bl	8000718 <memset>
 80008b8:	4620      	mov	r0, r4
 80008ba:	bd70      	pop	{r4, r5, r6, pc}

080008bc <__sfp_lock_acquire>:
 80008bc:	4801      	ldr	r0, [pc, #4]	; (80008c4 <__sfp_lock_acquire+0x8>)
 80008be:	f000 b8c5 	b.w	8000a4c <__retarget_lock_acquire_recursive>
 80008c2:	bf00      	nop
 80008c4:	200000cd 	.word	0x200000cd

080008c8 <__sfp_lock_release>:
 80008c8:	4801      	ldr	r0, [pc, #4]	; (80008d0 <__sfp_lock_release+0x8>)
 80008ca:	f000 b8c0 	b.w	8000a4e <__retarget_lock_release_recursive>
 80008ce:	bf00      	nop
 80008d0:	200000cd 	.word	0x200000cd

080008d4 <__sinit_lock_acquire>:
 80008d4:	4801      	ldr	r0, [pc, #4]	; (80008dc <__sinit_lock_acquire+0x8>)
 80008d6:	f000 b8b9 	b.w	8000a4c <__retarget_lock_acquire_recursive>
 80008da:	bf00      	nop
 80008dc:	200000ce 	.word	0x200000ce

080008e0 <__sinit_lock_release>:
 80008e0:	4801      	ldr	r0, [pc, #4]	; (80008e8 <__sinit_lock_release+0x8>)
 80008e2:	f000 b8b4 	b.w	8000a4e <__retarget_lock_release_recursive>
 80008e6:	bf00      	nop
 80008e8:	200000ce 	.word	0x200000ce

080008ec <__sinit>:
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
 80008f0:	f7ff fff0 	bl	80008d4 <__sinit_lock_acquire>
 80008f4:	69a3      	ldr	r3, [r4, #24]
 80008f6:	b11b      	cbz	r3, 8000900 <__sinit+0x14>
 80008f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008fc:	f7ff bff0 	b.w	80008e0 <__sinit_lock_release>
 8000900:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000904:	6523      	str	r3, [r4, #80]	; 0x50
 8000906:	4b13      	ldr	r3, [pc, #76]	; (8000954 <__sinit+0x68>)
 8000908:	4a13      	ldr	r2, [pc, #76]	; (8000958 <__sinit+0x6c>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	62a2      	str	r2, [r4, #40]	; 0x28
 800090e:	42a3      	cmp	r3, r4
 8000910:	bf04      	itt	eq
 8000912:	2301      	moveq	r3, #1
 8000914:	61a3      	streq	r3, [r4, #24]
 8000916:	4620      	mov	r0, r4
 8000918:	f000 f820 	bl	800095c <__sfp>
 800091c:	6060      	str	r0, [r4, #4]
 800091e:	4620      	mov	r0, r4
 8000920:	f000 f81c 	bl	800095c <__sfp>
 8000924:	60a0      	str	r0, [r4, #8]
 8000926:	4620      	mov	r0, r4
 8000928:	f000 f818 	bl	800095c <__sfp>
 800092c:	2200      	movs	r2, #0
 800092e:	60e0      	str	r0, [r4, #12]
 8000930:	2104      	movs	r1, #4
 8000932:	6860      	ldr	r0, [r4, #4]
 8000934:	f7ff ff82 	bl	800083c <std>
 8000938:	68a0      	ldr	r0, [r4, #8]
 800093a:	2201      	movs	r2, #1
 800093c:	2109      	movs	r1, #9
 800093e:	f7ff ff7d 	bl	800083c <std>
 8000942:	68e0      	ldr	r0, [r4, #12]
 8000944:	2202      	movs	r2, #2
 8000946:	2112      	movs	r1, #18
 8000948:	f7ff ff78 	bl	800083c <std>
 800094c:	2301      	movs	r3, #1
 800094e:	61a3      	str	r3, [r4, #24]
 8000950:	e7d2      	b.n	80008f8 <__sinit+0xc>
 8000952:	bf00      	nop
 8000954:	080018f8 	.word	0x080018f8
 8000958:	08000885 	.word	0x08000885

0800095c <__sfp>:
 800095c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095e:	4607      	mov	r7, r0
 8000960:	f7ff ffac 	bl	80008bc <__sfp_lock_acquire>
 8000964:	4b1e      	ldr	r3, [pc, #120]	; (80009e0 <__sfp+0x84>)
 8000966:	681e      	ldr	r6, [r3, #0]
 8000968:	69b3      	ldr	r3, [r6, #24]
 800096a:	b913      	cbnz	r3, 8000972 <__sfp+0x16>
 800096c:	4630      	mov	r0, r6
 800096e:	f7ff ffbd 	bl	80008ec <__sinit>
 8000972:	3648      	adds	r6, #72	; 0x48
 8000974:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000978:	3b01      	subs	r3, #1
 800097a:	d503      	bpl.n	8000984 <__sfp+0x28>
 800097c:	6833      	ldr	r3, [r6, #0]
 800097e:	b30b      	cbz	r3, 80009c4 <__sfp+0x68>
 8000980:	6836      	ldr	r6, [r6, #0]
 8000982:	e7f7      	b.n	8000974 <__sfp+0x18>
 8000984:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000988:	b9d5      	cbnz	r5, 80009c0 <__sfp+0x64>
 800098a:	4b16      	ldr	r3, [pc, #88]	; (80009e4 <__sfp+0x88>)
 800098c:	60e3      	str	r3, [r4, #12]
 800098e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000992:	6665      	str	r5, [r4, #100]	; 0x64
 8000994:	f000 f859 	bl	8000a4a <__retarget_lock_init_recursive>
 8000998:	f7ff ff96 	bl	80008c8 <__sfp_lock_release>
 800099c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009a0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009a4:	6025      	str	r5, [r4, #0]
 80009a6:	61a5      	str	r5, [r4, #24]
 80009a8:	2208      	movs	r2, #8
 80009aa:	4629      	mov	r1, r5
 80009ac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009b0:	f7ff feb2 	bl	8000718 <memset>
 80009b4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009b8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009bc:	4620      	mov	r0, r4
 80009be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009c0:	3468      	adds	r4, #104	; 0x68
 80009c2:	e7d9      	b.n	8000978 <__sfp+0x1c>
 80009c4:	2104      	movs	r1, #4
 80009c6:	4638      	mov	r0, r7
 80009c8:	f7ff ff62 	bl	8000890 <__sfmoreglue>
 80009cc:	4604      	mov	r4, r0
 80009ce:	6030      	str	r0, [r6, #0]
 80009d0:	2800      	cmp	r0, #0
 80009d2:	d1d5      	bne.n	8000980 <__sfp+0x24>
 80009d4:	f7ff ff78 	bl	80008c8 <__sfp_lock_release>
 80009d8:	230c      	movs	r3, #12
 80009da:	603b      	str	r3, [r7, #0]
 80009dc:	e7ee      	b.n	80009bc <__sfp+0x60>
 80009de:	bf00      	nop
 80009e0:	080018f8 	.word	0x080018f8
 80009e4:	ffff0001 	.word	0xffff0001

080009e8 <fiprintf>:
 80009e8:	b40e      	push	{r1, r2, r3}
 80009ea:	b503      	push	{r0, r1, lr}
 80009ec:	4601      	mov	r1, r0
 80009ee:	ab03      	add	r3, sp, #12
 80009f0:	4805      	ldr	r0, [pc, #20]	; (8000a08 <fiprintf+0x20>)
 80009f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80009f6:	6800      	ldr	r0, [r0, #0]
 80009f8:	9301      	str	r3, [sp, #4]
 80009fa:	f000 f93b 	bl	8000c74 <_vfiprintf_r>
 80009fe:	b002      	add	sp, #8
 8000a00:	f85d eb04 	ldr.w	lr, [sp], #4
 8000a04:	b003      	add	sp, #12
 8000a06:	4770      	bx	lr
 8000a08:	20000048 	.word	0x20000048

08000a0c <_fwalk_reent>:
 8000a0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a10:	4606      	mov	r6, r0
 8000a12:	4688      	mov	r8, r1
 8000a14:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a18:	2700      	movs	r7, #0
 8000a1a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a1e:	f1b9 0901 	subs.w	r9, r9, #1
 8000a22:	d505      	bpl.n	8000a30 <_fwalk_reent+0x24>
 8000a24:	6824      	ldr	r4, [r4, #0]
 8000a26:	2c00      	cmp	r4, #0
 8000a28:	d1f7      	bne.n	8000a1a <_fwalk_reent+0xe>
 8000a2a:	4638      	mov	r0, r7
 8000a2c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a30:	89ab      	ldrh	r3, [r5, #12]
 8000a32:	2b01      	cmp	r3, #1
 8000a34:	d907      	bls.n	8000a46 <_fwalk_reent+0x3a>
 8000a36:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a3a:	3301      	adds	r3, #1
 8000a3c:	d003      	beq.n	8000a46 <_fwalk_reent+0x3a>
 8000a3e:	4629      	mov	r1, r5
 8000a40:	4630      	mov	r0, r6
 8000a42:	47c0      	blx	r8
 8000a44:	4307      	orrs	r7, r0
 8000a46:	3568      	adds	r5, #104	; 0x68
 8000a48:	e7e9      	b.n	8000a1e <_fwalk_reent+0x12>

08000a4a <__retarget_lock_init_recursive>:
 8000a4a:	4770      	bx	lr

08000a4c <__retarget_lock_acquire_recursive>:
 8000a4c:	4770      	bx	lr

08000a4e <__retarget_lock_release_recursive>:
 8000a4e:	4770      	bx	lr

08000a50 <malloc>:
 8000a50:	4b02      	ldr	r3, [pc, #8]	; (8000a5c <malloc+0xc>)
 8000a52:	4601      	mov	r1, r0
 8000a54:	6818      	ldr	r0, [r3, #0]
 8000a56:	f000 b86f 	b.w	8000b38 <_malloc_r>
 8000a5a:	bf00      	nop
 8000a5c:	20000048 	.word	0x20000048

08000a60 <_free_r>:
 8000a60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a62:	2900      	cmp	r1, #0
 8000a64:	d044      	beq.n	8000af0 <_free_r+0x90>
 8000a66:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a6a:	9001      	str	r0, [sp, #4]
 8000a6c:	2b00      	cmp	r3, #0
 8000a6e:	f1a1 0404 	sub.w	r4, r1, #4
 8000a72:	bfb8      	it	lt
 8000a74:	18e4      	addlt	r4, r4, r3
 8000a76:	f000 fe81 	bl	800177c <__malloc_lock>
 8000a7a:	4a1e      	ldr	r2, [pc, #120]	; (8000af4 <_free_r+0x94>)
 8000a7c:	9801      	ldr	r0, [sp, #4]
 8000a7e:	6813      	ldr	r3, [r2, #0]
 8000a80:	b933      	cbnz	r3, 8000a90 <_free_r+0x30>
 8000a82:	6063      	str	r3, [r4, #4]
 8000a84:	6014      	str	r4, [r2, #0]
 8000a86:	b003      	add	sp, #12
 8000a88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000a8c:	f000 be7c 	b.w	8001788 <__malloc_unlock>
 8000a90:	42a3      	cmp	r3, r4
 8000a92:	d908      	bls.n	8000aa6 <_free_r+0x46>
 8000a94:	6825      	ldr	r5, [r4, #0]
 8000a96:	1961      	adds	r1, r4, r5
 8000a98:	428b      	cmp	r3, r1
 8000a9a:	bf01      	itttt	eq
 8000a9c:	6819      	ldreq	r1, [r3, #0]
 8000a9e:	685b      	ldreq	r3, [r3, #4]
 8000aa0:	1949      	addeq	r1, r1, r5
 8000aa2:	6021      	streq	r1, [r4, #0]
 8000aa4:	e7ed      	b.n	8000a82 <_free_r+0x22>
 8000aa6:	461a      	mov	r2, r3
 8000aa8:	685b      	ldr	r3, [r3, #4]
 8000aaa:	b10b      	cbz	r3, 8000ab0 <_free_r+0x50>
 8000aac:	42a3      	cmp	r3, r4
 8000aae:	d9fa      	bls.n	8000aa6 <_free_r+0x46>
 8000ab0:	6811      	ldr	r1, [r2, #0]
 8000ab2:	1855      	adds	r5, r2, r1
 8000ab4:	42a5      	cmp	r5, r4
 8000ab6:	d10b      	bne.n	8000ad0 <_free_r+0x70>
 8000ab8:	6824      	ldr	r4, [r4, #0]
 8000aba:	4421      	add	r1, r4
 8000abc:	1854      	adds	r4, r2, r1
 8000abe:	42a3      	cmp	r3, r4
 8000ac0:	6011      	str	r1, [r2, #0]
 8000ac2:	d1e0      	bne.n	8000a86 <_free_r+0x26>
 8000ac4:	681c      	ldr	r4, [r3, #0]
 8000ac6:	685b      	ldr	r3, [r3, #4]
 8000ac8:	6053      	str	r3, [r2, #4]
 8000aca:	4421      	add	r1, r4
 8000acc:	6011      	str	r1, [r2, #0]
 8000ace:	e7da      	b.n	8000a86 <_free_r+0x26>
 8000ad0:	d902      	bls.n	8000ad8 <_free_r+0x78>
 8000ad2:	230c      	movs	r3, #12
 8000ad4:	6003      	str	r3, [r0, #0]
 8000ad6:	e7d6      	b.n	8000a86 <_free_r+0x26>
 8000ad8:	6825      	ldr	r5, [r4, #0]
 8000ada:	1961      	adds	r1, r4, r5
 8000adc:	428b      	cmp	r3, r1
 8000ade:	bf04      	itt	eq
 8000ae0:	6819      	ldreq	r1, [r3, #0]
 8000ae2:	685b      	ldreq	r3, [r3, #4]
 8000ae4:	6063      	str	r3, [r4, #4]
 8000ae6:	bf04      	itt	eq
 8000ae8:	1949      	addeq	r1, r1, r5
 8000aea:	6021      	streq	r1, [r4, #0]
 8000aec:	6054      	str	r4, [r2, #4]
 8000aee:	e7ca      	b.n	8000a86 <_free_r+0x26>
 8000af0:	b003      	add	sp, #12
 8000af2:	bd30      	pop	{r4, r5, pc}
 8000af4:	200000d0 	.word	0x200000d0

08000af8 <sbrk_aligned>:
 8000af8:	b570      	push	{r4, r5, r6, lr}
 8000afa:	4e0e      	ldr	r6, [pc, #56]	; (8000b34 <sbrk_aligned+0x3c>)
 8000afc:	460c      	mov	r4, r1
 8000afe:	6831      	ldr	r1, [r6, #0]
 8000b00:	4605      	mov	r5, r0
 8000b02:	b911      	cbnz	r1, 8000b0a <sbrk_aligned+0x12>
 8000b04:	f000 fbc2 	bl	800128c <_sbrk_r>
 8000b08:	6030      	str	r0, [r6, #0]
 8000b0a:	4621      	mov	r1, r4
 8000b0c:	4628      	mov	r0, r5
 8000b0e:	f000 fbbd 	bl	800128c <_sbrk_r>
 8000b12:	1c43      	adds	r3, r0, #1
 8000b14:	d00a      	beq.n	8000b2c <sbrk_aligned+0x34>
 8000b16:	1cc4      	adds	r4, r0, #3
 8000b18:	f024 0403 	bic.w	r4, r4, #3
 8000b1c:	42a0      	cmp	r0, r4
 8000b1e:	d007      	beq.n	8000b30 <sbrk_aligned+0x38>
 8000b20:	1a21      	subs	r1, r4, r0
 8000b22:	4628      	mov	r0, r5
 8000b24:	f000 fbb2 	bl	800128c <_sbrk_r>
 8000b28:	3001      	adds	r0, #1
 8000b2a:	d101      	bne.n	8000b30 <sbrk_aligned+0x38>
 8000b2c:	f04f 34ff 	mov.w	r4, #4294967295
 8000b30:	4620      	mov	r0, r4
 8000b32:	bd70      	pop	{r4, r5, r6, pc}
 8000b34:	200000d4 	.word	0x200000d4

08000b38 <_malloc_r>:
 8000b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b3c:	1ccd      	adds	r5, r1, #3
 8000b3e:	f025 0503 	bic.w	r5, r5, #3
 8000b42:	3508      	adds	r5, #8
 8000b44:	2d0c      	cmp	r5, #12
 8000b46:	bf38      	it	cc
 8000b48:	250c      	movcc	r5, #12
 8000b4a:	2d00      	cmp	r5, #0
 8000b4c:	4607      	mov	r7, r0
 8000b4e:	db01      	blt.n	8000b54 <_malloc_r+0x1c>
 8000b50:	42a9      	cmp	r1, r5
 8000b52:	d905      	bls.n	8000b60 <_malloc_r+0x28>
 8000b54:	230c      	movs	r3, #12
 8000b56:	603b      	str	r3, [r7, #0]
 8000b58:	2600      	movs	r6, #0
 8000b5a:	4630      	mov	r0, r6
 8000b5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b60:	4e2e      	ldr	r6, [pc, #184]	; (8000c1c <_malloc_r+0xe4>)
 8000b62:	f000 fe0b 	bl	800177c <__malloc_lock>
 8000b66:	6833      	ldr	r3, [r6, #0]
 8000b68:	461c      	mov	r4, r3
 8000b6a:	bb34      	cbnz	r4, 8000bba <_malloc_r+0x82>
 8000b6c:	4629      	mov	r1, r5
 8000b6e:	4638      	mov	r0, r7
 8000b70:	f7ff ffc2 	bl	8000af8 <sbrk_aligned>
 8000b74:	1c43      	adds	r3, r0, #1
 8000b76:	4604      	mov	r4, r0
 8000b78:	d14d      	bne.n	8000c16 <_malloc_r+0xde>
 8000b7a:	6834      	ldr	r4, [r6, #0]
 8000b7c:	4626      	mov	r6, r4
 8000b7e:	2e00      	cmp	r6, #0
 8000b80:	d140      	bne.n	8000c04 <_malloc_r+0xcc>
 8000b82:	6823      	ldr	r3, [r4, #0]
 8000b84:	4631      	mov	r1, r6
 8000b86:	4638      	mov	r0, r7
 8000b88:	eb04 0803 	add.w	r8, r4, r3
 8000b8c:	f000 fb7e 	bl	800128c <_sbrk_r>
 8000b90:	4580      	cmp	r8, r0
 8000b92:	d13a      	bne.n	8000c0a <_malloc_r+0xd2>
 8000b94:	6821      	ldr	r1, [r4, #0]
 8000b96:	3503      	adds	r5, #3
 8000b98:	1a6d      	subs	r5, r5, r1
 8000b9a:	f025 0503 	bic.w	r5, r5, #3
 8000b9e:	3508      	adds	r5, #8
 8000ba0:	2d0c      	cmp	r5, #12
 8000ba2:	bf38      	it	cc
 8000ba4:	250c      	movcc	r5, #12
 8000ba6:	4629      	mov	r1, r5
 8000ba8:	4638      	mov	r0, r7
 8000baa:	f7ff ffa5 	bl	8000af8 <sbrk_aligned>
 8000bae:	3001      	adds	r0, #1
 8000bb0:	d02b      	beq.n	8000c0a <_malloc_r+0xd2>
 8000bb2:	6823      	ldr	r3, [r4, #0]
 8000bb4:	442b      	add	r3, r5
 8000bb6:	6023      	str	r3, [r4, #0]
 8000bb8:	e00e      	b.n	8000bd8 <_malloc_r+0xa0>
 8000bba:	6822      	ldr	r2, [r4, #0]
 8000bbc:	1b52      	subs	r2, r2, r5
 8000bbe:	d41e      	bmi.n	8000bfe <_malloc_r+0xc6>
 8000bc0:	2a0b      	cmp	r2, #11
 8000bc2:	d916      	bls.n	8000bf2 <_malloc_r+0xba>
 8000bc4:	1961      	adds	r1, r4, r5
 8000bc6:	42a3      	cmp	r3, r4
 8000bc8:	6025      	str	r5, [r4, #0]
 8000bca:	bf18      	it	ne
 8000bcc:	6059      	strne	r1, [r3, #4]
 8000bce:	6863      	ldr	r3, [r4, #4]
 8000bd0:	bf08      	it	eq
 8000bd2:	6031      	streq	r1, [r6, #0]
 8000bd4:	5162      	str	r2, [r4, r5]
 8000bd6:	604b      	str	r3, [r1, #4]
 8000bd8:	4638      	mov	r0, r7
 8000bda:	f104 060b 	add.w	r6, r4, #11
 8000bde:	f000 fdd3 	bl	8001788 <__malloc_unlock>
 8000be2:	f026 0607 	bic.w	r6, r6, #7
 8000be6:	1d23      	adds	r3, r4, #4
 8000be8:	1af2      	subs	r2, r6, r3
 8000bea:	d0b6      	beq.n	8000b5a <_malloc_r+0x22>
 8000bec:	1b9b      	subs	r3, r3, r6
 8000bee:	50a3      	str	r3, [r4, r2]
 8000bf0:	e7b3      	b.n	8000b5a <_malloc_r+0x22>
 8000bf2:	6862      	ldr	r2, [r4, #4]
 8000bf4:	42a3      	cmp	r3, r4
 8000bf6:	bf0c      	ite	eq
 8000bf8:	6032      	streq	r2, [r6, #0]
 8000bfa:	605a      	strne	r2, [r3, #4]
 8000bfc:	e7ec      	b.n	8000bd8 <_malloc_r+0xa0>
 8000bfe:	4623      	mov	r3, r4
 8000c00:	6864      	ldr	r4, [r4, #4]
 8000c02:	e7b2      	b.n	8000b6a <_malloc_r+0x32>
 8000c04:	4634      	mov	r4, r6
 8000c06:	6876      	ldr	r6, [r6, #4]
 8000c08:	e7b9      	b.n	8000b7e <_malloc_r+0x46>
 8000c0a:	230c      	movs	r3, #12
 8000c0c:	603b      	str	r3, [r7, #0]
 8000c0e:	4638      	mov	r0, r7
 8000c10:	f000 fdba 	bl	8001788 <__malloc_unlock>
 8000c14:	e7a1      	b.n	8000b5a <_malloc_r+0x22>
 8000c16:	6025      	str	r5, [r4, #0]
 8000c18:	e7de      	b.n	8000bd8 <_malloc_r+0xa0>
 8000c1a:	bf00      	nop
 8000c1c:	200000d0 	.word	0x200000d0

08000c20 <__sfputc_r>:
 8000c20:	6893      	ldr	r3, [r2, #8]
 8000c22:	3b01      	subs	r3, #1
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	b410      	push	{r4}
 8000c28:	6093      	str	r3, [r2, #8]
 8000c2a:	da08      	bge.n	8000c3e <__sfputc_r+0x1e>
 8000c2c:	6994      	ldr	r4, [r2, #24]
 8000c2e:	42a3      	cmp	r3, r4
 8000c30:	db01      	blt.n	8000c36 <__sfputc_r+0x16>
 8000c32:	290a      	cmp	r1, #10
 8000c34:	d103      	bne.n	8000c3e <__sfputc_r+0x1e>
 8000c36:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c3a:	f000 bb7b 	b.w	8001334 <__swbuf_r>
 8000c3e:	6813      	ldr	r3, [r2, #0]
 8000c40:	1c58      	adds	r0, r3, #1
 8000c42:	6010      	str	r0, [r2, #0]
 8000c44:	7019      	strb	r1, [r3, #0]
 8000c46:	4608      	mov	r0, r1
 8000c48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c4c:	4770      	bx	lr

08000c4e <__sfputs_r>:
 8000c4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c50:	4606      	mov	r6, r0
 8000c52:	460f      	mov	r7, r1
 8000c54:	4614      	mov	r4, r2
 8000c56:	18d5      	adds	r5, r2, r3
 8000c58:	42ac      	cmp	r4, r5
 8000c5a:	d101      	bne.n	8000c60 <__sfputs_r+0x12>
 8000c5c:	2000      	movs	r0, #0
 8000c5e:	e007      	b.n	8000c70 <__sfputs_r+0x22>
 8000c60:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c64:	463a      	mov	r2, r7
 8000c66:	4630      	mov	r0, r6
 8000c68:	f7ff ffda 	bl	8000c20 <__sfputc_r>
 8000c6c:	1c43      	adds	r3, r0, #1
 8000c6e:	d1f3      	bne.n	8000c58 <__sfputs_r+0xa>
 8000c70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c74 <_vfiprintf_r>:
 8000c74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c78:	460d      	mov	r5, r1
 8000c7a:	b09d      	sub	sp, #116	; 0x74
 8000c7c:	4614      	mov	r4, r2
 8000c7e:	4698      	mov	r8, r3
 8000c80:	4606      	mov	r6, r0
 8000c82:	b118      	cbz	r0, 8000c8c <_vfiprintf_r+0x18>
 8000c84:	6983      	ldr	r3, [r0, #24]
 8000c86:	b90b      	cbnz	r3, 8000c8c <_vfiprintf_r+0x18>
 8000c88:	f7ff fe30 	bl	80008ec <__sinit>
 8000c8c:	4b89      	ldr	r3, [pc, #548]	; (8000eb4 <_vfiprintf_r+0x240>)
 8000c8e:	429d      	cmp	r5, r3
 8000c90:	d11b      	bne.n	8000cca <_vfiprintf_r+0x56>
 8000c92:	6875      	ldr	r5, [r6, #4]
 8000c94:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c96:	07d9      	lsls	r1, r3, #31
 8000c98:	d405      	bmi.n	8000ca6 <_vfiprintf_r+0x32>
 8000c9a:	89ab      	ldrh	r3, [r5, #12]
 8000c9c:	059a      	lsls	r2, r3, #22
 8000c9e:	d402      	bmi.n	8000ca6 <_vfiprintf_r+0x32>
 8000ca0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ca2:	f7ff fed3 	bl	8000a4c <__retarget_lock_acquire_recursive>
 8000ca6:	89ab      	ldrh	r3, [r5, #12]
 8000ca8:	071b      	lsls	r3, r3, #28
 8000caa:	d501      	bpl.n	8000cb0 <_vfiprintf_r+0x3c>
 8000cac:	692b      	ldr	r3, [r5, #16]
 8000cae:	b9eb      	cbnz	r3, 8000cec <_vfiprintf_r+0x78>
 8000cb0:	4629      	mov	r1, r5
 8000cb2:	4630      	mov	r0, r6
 8000cb4:	f000 fba2 	bl	80013fc <__swsetup_r>
 8000cb8:	b1c0      	cbz	r0, 8000cec <_vfiprintf_r+0x78>
 8000cba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cbc:	07dc      	lsls	r4, r3, #31
 8000cbe:	d50e      	bpl.n	8000cde <_vfiprintf_r+0x6a>
 8000cc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc4:	b01d      	add	sp, #116	; 0x74
 8000cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cca:	4b7b      	ldr	r3, [pc, #492]	; (8000eb8 <_vfiprintf_r+0x244>)
 8000ccc:	429d      	cmp	r5, r3
 8000cce:	d101      	bne.n	8000cd4 <_vfiprintf_r+0x60>
 8000cd0:	68b5      	ldr	r5, [r6, #8]
 8000cd2:	e7df      	b.n	8000c94 <_vfiprintf_r+0x20>
 8000cd4:	4b79      	ldr	r3, [pc, #484]	; (8000ebc <_vfiprintf_r+0x248>)
 8000cd6:	429d      	cmp	r5, r3
 8000cd8:	bf08      	it	eq
 8000cda:	68f5      	ldreq	r5, [r6, #12]
 8000cdc:	e7da      	b.n	8000c94 <_vfiprintf_r+0x20>
 8000cde:	89ab      	ldrh	r3, [r5, #12]
 8000ce0:	0598      	lsls	r0, r3, #22
 8000ce2:	d4ed      	bmi.n	8000cc0 <_vfiprintf_r+0x4c>
 8000ce4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ce6:	f7ff feb2 	bl	8000a4e <__retarget_lock_release_recursive>
 8000cea:	e7e9      	b.n	8000cc0 <_vfiprintf_r+0x4c>
 8000cec:	2300      	movs	r3, #0
 8000cee:	9309      	str	r3, [sp, #36]	; 0x24
 8000cf0:	2320      	movs	r3, #32
 8000cf2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000cf6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cfa:	2330      	movs	r3, #48	; 0x30
 8000cfc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000ec0 <_vfiprintf_r+0x24c>
 8000d00:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000d04:	f04f 0901 	mov.w	r9, #1
 8000d08:	4623      	mov	r3, r4
 8000d0a:	469a      	mov	sl, r3
 8000d0c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000d10:	b10a      	cbz	r2, 8000d16 <_vfiprintf_r+0xa2>
 8000d12:	2a25      	cmp	r2, #37	; 0x25
 8000d14:	d1f9      	bne.n	8000d0a <_vfiprintf_r+0x96>
 8000d16:	ebba 0b04 	subs.w	fp, sl, r4
 8000d1a:	d00b      	beq.n	8000d34 <_vfiprintf_r+0xc0>
 8000d1c:	465b      	mov	r3, fp
 8000d1e:	4622      	mov	r2, r4
 8000d20:	4629      	mov	r1, r5
 8000d22:	4630      	mov	r0, r6
 8000d24:	f7ff ff93 	bl	8000c4e <__sfputs_r>
 8000d28:	3001      	adds	r0, #1
 8000d2a:	f000 80aa 	beq.w	8000e82 <_vfiprintf_r+0x20e>
 8000d2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d30:	445a      	add	r2, fp
 8000d32:	9209      	str	r2, [sp, #36]	; 0x24
 8000d34:	f89a 3000 	ldrb.w	r3, [sl]
 8000d38:	2b00      	cmp	r3, #0
 8000d3a:	f000 80a2 	beq.w	8000e82 <_vfiprintf_r+0x20e>
 8000d3e:	2300      	movs	r3, #0
 8000d40:	f04f 32ff 	mov.w	r2, #4294967295
 8000d44:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d48:	f10a 0a01 	add.w	sl, sl, #1
 8000d4c:	9304      	str	r3, [sp, #16]
 8000d4e:	9307      	str	r3, [sp, #28]
 8000d50:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d54:	931a      	str	r3, [sp, #104]	; 0x68
 8000d56:	4654      	mov	r4, sl
 8000d58:	2205      	movs	r2, #5
 8000d5a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d5e:	4858      	ldr	r0, [pc, #352]	; (8000ec0 <_vfiprintf_r+0x24c>)
 8000d60:	f7ff fa46 	bl	80001f0 <memchr>
 8000d64:	9a04      	ldr	r2, [sp, #16]
 8000d66:	b9d8      	cbnz	r0, 8000da0 <_vfiprintf_r+0x12c>
 8000d68:	06d1      	lsls	r1, r2, #27
 8000d6a:	bf44      	itt	mi
 8000d6c:	2320      	movmi	r3, #32
 8000d6e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d72:	0713      	lsls	r3, r2, #28
 8000d74:	bf44      	itt	mi
 8000d76:	232b      	movmi	r3, #43	; 0x2b
 8000d78:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d7c:	f89a 3000 	ldrb.w	r3, [sl]
 8000d80:	2b2a      	cmp	r3, #42	; 0x2a
 8000d82:	d015      	beq.n	8000db0 <_vfiprintf_r+0x13c>
 8000d84:	9a07      	ldr	r2, [sp, #28]
 8000d86:	4654      	mov	r4, sl
 8000d88:	2000      	movs	r0, #0
 8000d8a:	f04f 0c0a 	mov.w	ip, #10
 8000d8e:	4621      	mov	r1, r4
 8000d90:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d94:	3b30      	subs	r3, #48	; 0x30
 8000d96:	2b09      	cmp	r3, #9
 8000d98:	d94e      	bls.n	8000e38 <_vfiprintf_r+0x1c4>
 8000d9a:	b1b0      	cbz	r0, 8000dca <_vfiprintf_r+0x156>
 8000d9c:	9207      	str	r2, [sp, #28]
 8000d9e:	e014      	b.n	8000dca <_vfiprintf_r+0x156>
 8000da0:	eba0 0308 	sub.w	r3, r0, r8
 8000da4:	fa09 f303 	lsl.w	r3, r9, r3
 8000da8:	4313      	orrs	r3, r2
 8000daa:	9304      	str	r3, [sp, #16]
 8000dac:	46a2      	mov	sl, r4
 8000dae:	e7d2      	b.n	8000d56 <_vfiprintf_r+0xe2>
 8000db0:	9b03      	ldr	r3, [sp, #12]
 8000db2:	1d19      	adds	r1, r3, #4
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	9103      	str	r1, [sp, #12]
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	bfbb      	ittet	lt
 8000dbc:	425b      	neglt	r3, r3
 8000dbe:	f042 0202 	orrlt.w	r2, r2, #2
 8000dc2:	9307      	strge	r3, [sp, #28]
 8000dc4:	9307      	strlt	r3, [sp, #28]
 8000dc6:	bfb8      	it	lt
 8000dc8:	9204      	strlt	r2, [sp, #16]
 8000dca:	7823      	ldrb	r3, [r4, #0]
 8000dcc:	2b2e      	cmp	r3, #46	; 0x2e
 8000dce:	d10c      	bne.n	8000dea <_vfiprintf_r+0x176>
 8000dd0:	7863      	ldrb	r3, [r4, #1]
 8000dd2:	2b2a      	cmp	r3, #42	; 0x2a
 8000dd4:	d135      	bne.n	8000e42 <_vfiprintf_r+0x1ce>
 8000dd6:	9b03      	ldr	r3, [sp, #12]
 8000dd8:	1d1a      	adds	r2, r3, #4
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	9203      	str	r2, [sp, #12]
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	bfb8      	it	lt
 8000de2:	f04f 33ff 	movlt.w	r3, #4294967295
 8000de6:	3402      	adds	r4, #2
 8000de8:	9305      	str	r3, [sp, #20]
 8000dea:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000ed0 <_vfiprintf_r+0x25c>
 8000dee:	7821      	ldrb	r1, [r4, #0]
 8000df0:	2203      	movs	r2, #3
 8000df2:	4650      	mov	r0, sl
 8000df4:	f7ff f9fc 	bl	80001f0 <memchr>
 8000df8:	b140      	cbz	r0, 8000e0c <_vfiprintf_r+0x198>
 8000dfa:	2340      	movs	r3, #64	; 0x40
 8000dfc:	eba0 000a 	sub.w	r0, r0, sl
 8000e00:	fa03 f000 	lsl.w	r0, r3, r0
 8000e04:	9b04      	ldr	r3, [sp, #16]
 8000e06:	4303      	orrs	r3, r0
 8000e08:	3401      	adds	r4, #1
 8000e0a:	9304      	str	r3, [sp, #16]
 8000e0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e10:	482c      	ldr	r0, [pc, #176]	; (8000ec4 <_vfiprintf_r+0x250>)
 8000e12:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e16:	2206      	movs	r2, #6
 8000e18:	f7ff f9ea 	bl	80001f0 <memchr>
 8000e1c:	2800      	cmp	r0, #0
 8000e1e:	d03f      	beq.n	8000ea0 <_vfiprintf_r+0x22c>
 8000e20:	4b29      	ldr	r3, [pc, #164]	; (8000ec8 <_vfiprintf_r+0x254>)
 8000e22:	bb1b      	cbnz	r3, 8000e6c <_vfiprintf_r+0x1f8>
 8000e24:	9b03      	ldr	r3, [sp, #12]
 8000e26:	3307      	adds	r3, #7
 8000e28:	f023 0307 	bic.w	r3, r3, #7
 8000e2c:	3308      	adds	r3, #8
 8000e2e:	9303      	str	r3, [sp, #12]
 8000e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e32:	443b      	add	r3, r7
 8000e34:	9309      	str	r3, [sp, #36]	; 0x24
 8000e36:	e767      	b.n	8000d08 <_vfiprintf_r+0x94>
 8000e38:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e3c:	460c      	mov	r4, r1
 8000e3e:	2001      	movs	r0, #1
 8000e40:	e7a5      	b.n	8000d8e <_vfiprintf_r+0x11a>
 8000e42:	2300      	movs	r3, #0
 8000e44:	3401      	adds	r4, #1
 8000e46:	9305      	str	r3, [sp, #20]
 8000e48:	4619      	mov	r1, r3
 8000e4a:	f04f 0c0a 	mov.w	ip, #10
 8000e4e:	4620      	mov	r0, r4
 8000e50:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e54:	3a30      	subs	r2, #48	; 0x30
 8000e56:	2a09      	cmp	r2, #9
 8000e58:	d903      	bls.n	8000e62 <_vfiprintf_r+0x1ee>
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d0c5      	beq.n	8000dea <_vfiprintf_r+0x176>
 8000e5e:	9105      	str	r1, [sp, #20]
 8000e60:	e7c3      	b.n	8000dea <_vfiprintf_r+0x176>
 8000e62:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e66:	4604      	mov	r4, r0
 8000e68:	2301      	movs	r3, #1
 8000e6a:	e7f0      	b.n	8000e4e <_vfiprintf_r+0x1da>
 8000e6c:	ab03      	add	r3, sp, #12
 8000e6e:	9300      	str	r3, [sp, #0]
 8000e70:	462a      	mov	r2, r5
 8000e72:	4b16      	ldr	r3, [pc, #88]	; (8000ecc <_vfiprintf_r+0x258>)
 8000e74:	a904      	add	r1, sp, #16
 8000e76:	4630      	mov	r0, r6
 8000e78:	f3af 8000 	nop.w
 8000e7c:	4607      	mov	r7, r0
 8000e7e:	1c78      	adds	r0, r7, #1
 8000e80:	d1d6      	bne.n	8000e30 <_vfiprintf_r+0x1bc>
 8000e82:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e84:	07d9      	lsls	r1, r3, #31
 8000e86:	d405      	bmi.n	8000e94 <_vfiprintf_r+0x220>
 8000e88:	89ab      	ldrh	r3, [r5, #12]
 8000e8a:	059a      	lsls	r2, r3, #22
 8000e8c:	d402      	bmi.n	8000e94 <_vfiprintf_r+0x220>
 8000e8e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e90:	f7ff fddd 	bl	8000a4e <__retarget_lock_release_recursive>
 8000e94:	89ab      	ldrh	r3, [r5, #12]
 8000e96:	065b      	lsls	r3, r3, #25
 8000e98:	f53f af12 	bmi.w	8000cc0 <_vfiprintf_r+0x4c>
 8000e9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e9e:	e711      	b.n	8000cc4 <_vfiprintf_r+0x50>
 8000ea0:	ab03      	add	r3, sp, #12
 8000ea2:	9300      	str	r3, [sp, #0]
 8000ea4:	462a      	mov	r2, r5
 8000ea6:	4b09      	ldr	r3, [pc, #36]	; (8000ecc <_vfiprintf_r+0x258>)
 8000ea8:	a904      	add	r1, sp, #16
 8000eaa:	4630      	mov	r0, r6
 8000eac:	f000 f880 	bl	8000fb0 <_printf_i>
 8000eb0:	e7e4      	b.n	8000e7c <_vfiprintf_r+0x208>
 8000eb2:	bf00      	nop
 8000eb4:	080019cc 	.word	0x080019cc
 8000eb8:	080019ec 	.word	0x080019ec
 8000ebc:	080019ac 	.word	0x080019ac
 8000ec0:	08001a0c 	.word	0x08001a0c
 8000ec4:	08001a16 	.word	0x08001a16
 8000ec8:	00000000 	.word	0x00000000
 8000ecc:	08000c4f 	.word	0x08000c4f
 8000ed0:	08001a12 	.word	0x08001a12

08000ed4 <_printf_common>:
 8000ed4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ed8:	4616      	mov	r6, r2
 8000eda:	4699      	mov	r9, r3
 8000edc:	688a      	ldr	r2, [r1, #8]
 8000ede:	690b      	ldr	r3, [r1, #16]
 8000ee0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ee4:	4293      	cmp	r3, r2
 8000ee6:	bfb8      	it	lt
 8000ee8:	4613      	movlt	r3, r2
 8000eea:	6033      	str	r3, [r6, #0]
 8000eec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ef0:	4607      	mov	r7, r0
 8000ef2:	460c      	mov	r4, r1
 8000ef4:	b10a      	cbz	r2, 8000efa <_printf_common+0x26>
 8000ef6:	3301      	adds	r3, #1
 8000ef8:	6033      	str	r3, [r6, #0]
 8000efa:	6823      	ldr	r3, [r4, #0]
 8000efc:	0699      	lsls	r1, r3, #26
 8000efe:	bf42      	ittt	mi
 8000f00:	6833      	ldrmi	r3, [r6, #0]
 8000f02:	3302      	addmi	r3, #2
 8000f04:	6033      	strmi	r3, [r6, #0]
 8000f06:	6825      	ldr	r5, [r4, #0]
 8000f08:	f015 0506 	ands.w	r5, r5, #6
 8000f0c:	d106      	bne.n	8000f1c <_printf_common+0x48>
 8000f0e:	f104 0a19 	add.w	sl, r4, #25
 8000f12:	68e3      	ldr	r3, [r4, #12]
 8000f14:	6832      	ldr	r2, [r6, #0]
 8000f16:	1a9b      	subs	r3, r3, r2
 8000f18:	42ab      	cmp	r3, r5
 8000f1a:	dc26      	bgt.n	8000f6a <_printf_common+0x96>
 8000f1c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f20:	1e13      	subs	r3, r2, #0
 8000f22:	6822      	ldr	r2, [r4, #0]
 8000f24:	bf18      	it	ne
 8000f26:	2301      	movne	r3, #1
 8000f28:	0692      	lsls	r2, r2, #26
 8000f2a:	d42b      	bmi.n	8000f84 <_printf_common+0xb0>
 8000f2c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f30:	4649      	mov	r1, r9
 8000f32:	4638      	mov	r0, r7
 8000f34:	47c0      	blx	r8
 8000f36:	3001      	adds	r0, #1
 8000f38:	d01e      	beq.n	8000f78 <_printf_common+0xa4>
 8000f3a:	6823      	ldr	r3, [r4, #0]
 8000f3c:	68e5      	ldr	r5, [r4, #12]
 8000f3e:	6832      	ldr	r2, [r6, #0]
 8000f40:	f003 0306 	and.w	r3, r3, #6
 8000f44:	2b04      	cmp	r3, #4
 8000f46:	bf08      	it	eq
 8000f48:	1aad      	subeq	r5, r5, r2
 8000f4a:	68a3      	ldr	r3, [r4, #8]
 8000f4c:	6922      	ldr	r2, [r4, #16]
 8000f4e:	bf0c      	ite	eq
 8000f50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f54:	2500      	movne	r5, #0
 8000f56:	4293      	cmp	r3, r2
 8000f58:	bfc4      	itt	gt
 8000f5a:	1a9b      	subgt	r3, r3, r2
 8000f5c:	18ed      	addgt	r5, r5, r3
 8000f5e:	2600      	movs	r6, #0
 8000f60:	341a      	adds	r4, #26
 8000f62:	42b5      	cmp	r5, r6
 8000f64:	d11a      	bne.n	8000f9c <_printf_common+0xc8>
 8000f66:	2000      	movs	r0, #0
 8000f68:	e008      	b.n	8000f7c <_printf_common+0xa8>
 8000f6a:	2301      	movs	r3, #1
 8000f6c:	4652      	mov	r2, sl
 8000f6e:	4649      	mov	r1, r9
 8000f70:	4638      	mov	r0, r7
 8000f72:	47c0      	blx	r8
 8000f74:	3001      	adds	r0, #1
 8000f76:	d103      	bne.n	8000f80 <_printf_common+0xac>
 8000f78:	f04f 30ff 	mov.w	r0, #4294967295
 8000f7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f80:	3501      	adds	r5, #1
 8000f82:	e7c6      	b.n	8000f12 <_printf_common+0x3e>
 8000f84:	18e1      	adds	r1, r4, r3
 8000f86:	1c5a      	adds	r2, r3, #1
 8000f88:	2030      	movs	r0, #48	; 0x30
 8000f8a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f8e:	4422      	add	r2, r4
 8000f90:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f94:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f98:	3302      	adds	r3, #2
 8000f9a:	e7c7      	b.n	8000f2c <_printf_common+0x58>
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	4622      	mov	r2, r4
 8000fa0:	4649      	mov	r1, r9
 8000fa2:	4638      	mov	r0, r7
 8000fa4:	47c0      	blx	r8
 8000fa6:	3001      	adds	r0, #1
 8000fa8:	d0e6      	beq.n	8000f78 <_printf_common+0xa4>
 8000faa:	3601      	adds	r6, #1
 8000fac:	e7d9      	b.n	8000f62 <_printf_common+0x8e>
	...

08000fb0 <_printf_i>:
 8000fb0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fb4:	7e0f      	ldrb	r7, [r1, #24]
 8000fb6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000fb8:	2f78      	cmp	r7, #120	; 0x78
 8000fba:	4691      	mov	r9, r2
 8000fbc:	4680      	mov	r8, r0
 8000fbe:	460c      	mov	r4, r1
 8000fc0:	469a      	mov	sl, r3
 8000fc2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000fc6:	d807      	bhi.n	8000fd8 <_printf_i+0x28>
 8000fc8:	2f62      	cmp	r7, #98	; 0x62
 8000fca:	d80a      	bhi.n	8000fe2 <_printf_i+0x32>
 8000fcc:	2f00      	cmp	r7, #0
 8000fce:	f000 80d8 	beq.w	8001182 <_printf_i+0x1d2>
 8000fd2:	2f58      	cmp	r7, #88	; 0x58
 8000fd4:	f000 80a3 	beq.w	800111e <_printf_i+0x16e>
 8000fd8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fdc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000fe0:	e03a      	b.n	8001058 <_printf_i+0xa8>
 8000fe2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000fe6:	2b15      	cmp	r3, #21
 8000fe8:	d8f6      	bhi.n	8000fd8 <_printf_i+0x28>
 8000fea:	a101      	add	r1, pc, #4	; (adr r1, 8000ff0 <_printf_i+0x40>)
 8000fec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ff0:	08001049 	.word	0x08001049
 8000ff4:	0800105d 	.word	0x0800105d
 8000ff8:	08000fd9 	.word	0x08000fd9
 8000ffc:	08000fd9 	.word	0x08000fd9
 8001000:	08000fd9 	.word	0x08000fd9
 8001004:	08000fd9 	.word	0x08000fd9
 8001008:	0800105d 	.word	0x0800105d
 800100c:	08000fd9 	.word	0x08000fd9
 8001010:	08000fd9 	.word	0x08000fd9
 8001014:	08000fd9 	.word	0x08000fd9
 8001018:	08000fd9 	.word	0x08000fd9
 800101c:	08001169 	.word	0x08001169
 8001020:	0800108d 	.word	0x0800108d
 8001024:	0800114b 	.word	0x0800114b
 8001028:	08000fd9 	.word	0x08000fd9
 800102c:	08000fd9 	.word	0x08000fd9
 8001030:	0800118b 	.word	0x0800118b
 8001034:	08000fd9 	.word	0x08000fd9
 8001038:	0800108d 	.word	0x0800108d
 800103c:	08000fd9 	.word	0x08000fd9
 8001040:	08000fd9 	.word	0x08000fd9
 8001044:	08001153 	.word	0x08001153
 8001048:	682b      	ldr	r3, [r5, #0]
 800104a:	1d1a      	adds	r2, r3, #4
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	602a      	str	r2, [r5, #0]
 8001050:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001054:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001058:	2301      	movs	r3, #1
 800105a:	e0a3      	b.n	80011a4 <_printf_i+0x1f4>
 800105c:	6820      	ldr	r0, [r4, #0]
 800105e:	6829      	ldr	r1, [r5, #0]
 8001060:	0606      	lsls	r6, r0, #24
 8001062:	f101 0304 	add.w	r3, r1, #4
 8001066:	d50a      	bpl.n	800107e <_printf_i+0xce>
 8001068:	680e      	ldr	r6, [r1, #0]
 800106a:	602b      	str	r3, [r5, #0]
 800106c:	2e00      	cmp	r6, #0
 800106e:	da03      	bge.n	8001078 <_printf_i+0xc8>
 8001070:	232d      	movs	r3, #45	; 0x2d
 8001072:	4276      	negs	r6, r6
 8001074:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001078:	485e      	ldr	r0, [pc, #376]	; (80011f4 <_printf_i+0x244>)
 800107a:	230a      	movs	r3, #10
 800107c:	e019      	b.n	80010b2 <_printf_i+0x102>
 800107e:	680e      	ldr	r6, [r1, #0]
 8001080:	602b      	str	r3, [r5, #0]
 8001082:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001086:	bf18      	it	ne
 8001088:	b236      	sxthne	r6, r6
 800108a:	e7ef      	b.n	800106c <_printf_i+0xbc>
 800108c:	682b      	ldr	r3, [r5, #0]
 800108e:	6820      	ldr	r0, [r4, #0]
 8001090:	1d19      	adds	r1, r3, #4
 8001092:	6029      	str	r1, [r5, #0]
 8001094:	0601      	lsls	r1, r0, #24
 8001096:	d501      	bpl.n	800109c <_printf_i+0xec>
 8001098:	681e      	ldr	r6, [r3, #0]
 800109a:	e002      	b.n	80010a2 <_printf_i+0xf2>
 800109c:	0646      	lsls	r6, r0, #25
 800109e:	d5fb      	bpl.n	8001098 <_printf_i+0xe8>
 80010a0:	881e      	ldrh	r6, [r3, #0]
 80010a2:	4854      	ldr	r0, [pc, #336]	; (80011f4 <_printf_i+0x244>)
 80010a4:	2f6f      	cmp	r7, #111	; 0x6f
 80010a6:	bf0c      	ite	eq
 80010a8:	2308      	moveq	r3, #8
 80010aa:	230a      	movne	r3, #10
 80010ac:	2100      	movs	r1, #0
 80010ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80010b2:	6865      	ldr	r5, [r4, #4]
 80010b4:	60a5      	str	r5, [r4, #8]
 80010b6:	2d00      	cmp	r5, #0
 80010b8:	bfa2      	ittt	ge
 80010ba:	6821      	ldrge	r1, [r4, #0]
 80010bc:	f021 0104 	bicge.w	r1, r1, #4
 80010c0:	6021      	strge	r1, [r4, #0]
 80010c2:	b90e      	cbnz	r6, 80010c8 <_printf_i+0x118>
 80010c4:	2d00      	cmp	r5, #0
 80010c6:	d04d      	beq.n	8001164 <_printf_i+0x1b4>
 80010c8:	4615      	mov	r5, r2
 80010ca:	fbb6 f1f3 	udiv	r1, r6, r3
 80010ce:	fb03 6711 	mls	r7, r3, r1, r6
 80010d2:	5dc7      	ldrb	r7, [r0, r7]
 80010d4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80010d8:	4637      	mov	r7, r6
 80010da:	42bb      	cmp	r3, r7
 80010dc:	460e      	mov	r6, r1
 80010de:	d9f4      	bls.n	80010ca <_printf_i+0x11a>
 80010e0:	2b08      	cmp	r3, #8
 80010e2:	d10b      	bne.n	80010fc <_printf_i+0x14c>
 80010e4:	6823      	ldr	r3, [r4, #0]
 80010e6:	07de      	lsls	r6, r3, #31
 80010e8:	d508      	bpl.n	80010fc <_printf_i+0x14c>
 80010ea:	6923      	ldr	r3, [r4, #16]
 80010ec:	6861      	ldr	r1, [r4, #4]
 80010ee:	4299      	cmp	r1, r3
 80010f0:	bfde      	ittt	le
 80010f2:	2330      	movle	r3, #48	; 0x30
 80010f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80010f8:	f105 35ff 	addle.w	r5, r5, #4294967295
 80010fc:	1b52      	subs	r2, r2, r5
 80010fe:	6122      	str	r2, [r4, #16]
 8001100:	f8cd a000 	str.w	sl, [sp]
 8001104:	464b      	mov	r3, r9
 8001106:	aa03      	add	r2, sp, #12
 8001108:	4621      	mov	r1, r4
 800110a:	4640      	mov	r0, r8
 800110c:	f7ff fee2 	bl	8000ed4 <_printf_common>
 8001110:	3001      	adds	r0, #1
 8001112:	d14c      	bne.n	80011ae <_printf_i+0x1fe>
 8001114:	f04f 30ff 	mov.w	r0, #4294967295
 8001118:	b004      	add	sp, #16
 800111a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800111e:	4835      	ldr	r0, [pc, #212]	; (80011f4 <_printf_i+0x244>)
 8001120:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001124:	6829      	ldr	r1, [r5, #0]
 8001126:	6823      	ldr	r3, [r4, #0]
 8001128:	f851 6b04 	ldr.w	r6, [r1], #4
 800112c:	6029      	str	r1, [r5, #0]
 800112e:	061d      	lsls	r5, r3, #24
 8001130:	d514      	bpl.n	800115c <_printf_i+0x1ac>
 8001132:	07df      	lsls	r7, r3, #31
 8001134:	bf44      	itt	mi
 8001136:	f043 0320 	orrmi.w	r3, r3, #32
 800113a:	6023      	strmi	r3, [r4, #0]
 800113c:	b91e      	cbnz	r6, 8001146 <_printf_i+0x196>
 800113e:	6823      	ldr	r3, [r4, #0]
 8001140:	f023 0320 	bic.w	r3, r3, #32
 8001144:	6023      	str	r3, [r4, #0]
 8001146:	2310      	movs	r3, #16
 8001148:	e7b0      	b.n	80010ac <_printf_i+0xfc>
 800114a:	6823      	ldr	r3, [r4, #0]
 800114c:	f043 0320 	orr.w	r3, r3, #32
 8001150:	6023      	str	r3, [r4, #0]
 8001152:	2378      	movs	r3, #120	; 0x78
 8001154:	4828      	ldr	r0, [pc, #160]	; (80011f8 <_printf_i+0x248>)
 8001156:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800115a:	e7e3      	b.n	8001124 <_printf_i+0x174>
 800115c:	0659      	lsls	r1, r3, #25
 800115e:	bf48      	it	mi
 8001160:	b2b6      	uxthmi	r6, r6
 8001162:	e7e6      	b.n	8001132 <_printf_i+0x182>
 8001164:	4615      	mov	r5, r2
 8001166:	e7bb      	b.n	80010e0 <_printf_i+0x130>
 8001168:	682b      	ldr	r3, [r5, #0]
 800116a:	6826      	ldr	r6, [r4, #0]
 800116c:	6961      	ldr	r1, [r4, #20]
 800116e:	1d18      	adds	r0, r3, #4
 8001170:	6028      	str	r0, [r5, #0]
 8001172:	0635      	lsls	r5, r6, #24
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	d501      	bpl.n	800117c <_printf_i+0x1cc>
 8001178:	6019      	str	r1, [r3, #0]
 800117a:	e002      	b.n	8001182 <_printf_i+0x1d2>
 800117c:	0670      	lsls	r0, r6, #25
 800117e:	d5fb      	bpl.n	8001178 <_printf_i+0x1c8>
 8001180:	8019      	strh	r1, [r3, #0]
 8001182:	2300      	movs	r3, #0
 8001184:	6123      	str	r3, [r4, #16]
 8001186:	4615      	mov	r5, r2
 8001188:	e7ba      	b.n	8001100 <_printf_i+0x150>
 800118a:	682b      	ldr	r3, [r5, #0]
 800118c:	1d1a      	adds	r2, r3, #4
 800118e:	602a      	str	r2, [r5, #0]
 8001190:	681d      	ldr	r5, [r3, #0]
 8001192:	6862      	ldr	r2, [r4, #4]
 8001194:	2100      	movs	r1, #0
 8001196:	4628      	mov	r0, r5
 8001198:	f7ff f82a 	bl	80001f0 <memchr>
 800119c:	b108      	cbz	r0, 80011a2 <_printf_i+0x1f2>
 800119e:	1b40      	subs	r0, r0, r5
 80011a0:	6060      	str	r0, [r4, #4]
 80011a2:	6863      	ldr	r3, [r4, #4]
 80011a4:	6123      	str	r3, [r4, #16]
 80011a6:	2300      	movs	r3, #0
 80011a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011ac:	e7a8      	b.n	8001100 <_printf_i+0x150>
 80011ae:	6923      	ldr	r3, [r4, #16]
 80011b0:	462a      	mov	r2, r5
 80011b2:	4649      	mov	r1, r9
 80011b4:	4640      	mov	r0, r8
 80011b6:	47d0      	blx	sl
 80011b8:	3001      	adds	r0, #1
 80011ba:	d0ab      	beq.n	8001114 <_printf_i+0x164>
 80011bc:	6823      	ldr	r3, [r4, #0]
 80011be:	079b      	lsls	r3, r3, #30
 80011c0:	d413      	bmi.n	80011ea <_printf_i+0x23a>
 80011c2:	68e0      	ldr	r0, [r4, #12]
 80011c4:	9b03      	ldr	r3, [sp, #12]
 80011c6:	4298      	cmp	r0, r3
 80011c8:	bfb8      	it	lt
 80011ca:	4618      	movlt	r0, r3
 80011cc:	e7a4      	b.n	8001118 <_printf_i+0x168>
 80011ce:	2301      	movs	r3, #1
 80011d0:	4632      	mov	r2, r6
 80011d2:	4649      	mov	r1, r9
 80011d4:	4640      	mov	r0, r8
 80011d6:	47d0      	blx	sl
 80011d8:	3001      	adds	r0, #1
 80011da:	d09b      	beq.n	8001114 <_printf_i+0x164>
 80011dc:	3501      	adds	r5, #1
 80011de:	68e3      	ldr	r3, [r4, #12]
 80011e0:	9903      	ldr	r1, [sp, #12]
 80011e2:	1a5b      	subs	r3, r3, r1
 80011e4:	42ab      	cmp	r3, r5
 80011e6:	dcf2      	bgt.n	80011ce <_printf_i+0x21e>
 80011e8:	e7eb      	b.n	80011c2 <_printf_i+0x212>
 80011ea:	2500      	movs	r5, #0
 80011ec:	f104 0619 	add.w	r6, r4, #25
 80011f0:	e7f5      	b.n	80011de <_printf_i+0x22e>
 80011f2:	bf00      	nop
 80011f4:	08001a1d 	.word	0x08001a1d
 80011f8:	08001a2e 	.word	0x08001a2e

080011fc <_putc_r>:
 80011fc:	b570      	push	{r4, r5, r6, lr}
 80011fe:	460d      	mov	r5, r1
 8001200:	4614      	mov	r4, r2
 8001202:	4606      	mov	r6, r0
 8001204:	b118      	cbz	r0, 800120e <_putc_r+0x12>
 8001206:	6983      	ldr	r3, [r0, #24]
 8001208:	b90b      	cbnz	r3, 800120e <_putc_r+0x12>
 800120a:	f7ff fb6f 	bl	80008ec <__sinit>
 800120e:	4b1c      	ldr	r3, [pc, #112]	; (8001280 <_putc_r+0x84>)
 8001210:	429c      	cmp	r4, r3
 8001212:	d124      	bne.n	800125e <_putc_r+0x62>
 8001214:	6874      	ldr	r4, [r6, #4]
 8001216:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001218:	07d8      	lsls	r0, r3, #31
 800121a:	d405      	bmi.n	8001228 <_putc_r+0x2c>
 800121c:	89a3      	ldrh	r3, [r4, #12]
 800121e:	0599      	lsls	r1, r3, #22
 8001220:	d402      	bmi.n	8001228 <_putc_r+0x2c>
 8001222:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001224:	f7ff fc12 	bl	8000a4c <__retarget_lock_acquire_recursive>
 8001228:	68a3      	ldr	r3, [r4, #8]
 800122a:	3b01      	subs	r3, #1
 800122c:	2b00      	cmp	r3, #0
 800122e:	60a3      	str	r3, [r4, #8]
 8001230:	da05      	bge.n	800123e <_putc_r+0x42>
 8001232:	69a2      	ldr	r2, [r4, #24]
 8001234:	4293      	cmp	r3, r2
 8001236:	db1c      	blt.n	8001272 <_putc_r+0x76>
 8001238:	b2eb      	uxtb	r3, r5
 800123a:	2b0a      	cmp	r3, #10
 800123c:	d019      	beq.n	8001272 <_putc_r+0x76>
 800123e:	6823      	ldr	r3, [r4, #0]
 8001240:	1c5a      	adds	r2, r3, #1
 8001242:	6022      	str	r2, [r4, #0]
 8001244:	701d      	strb	r5, [r3, #0]
 8001246:	b2ed      	uxtb	r5, r5
 8001248:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800124a:	07da      	lsls	r2, r3, #31
 800124c:	d405      	bmi.n	800125a <_putc_r+0x5e>
 800124e:	89a3      	ldrh	r3, [r4, #12]
 8001250:	059b      	lsls	r3, r3, #22
 8001252:	d402      	bmi.n	800125a <_putc_r+0x5e>
 8001254:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001256:	f7ff fbfa 	bl	8000a4e <__retarget_lock_release_recursive>
 800125a:	4628      	mov	r0, r5
 800125c:	bd70      	pop	{r4, r5, r6, pc}
 800125e:	4b09      	ldr	r3, [pc, #36]	; (8001284 <_putc_r+0x88>)
 8001260:	429c      	cmp	r4, r3
 8001262:	d101      	bne.n	8001268 <_putc_r+0x6c>
 8001264:	68b4      	ldr	r4, [r6, #8]
 8001266:	e7d6      	b.n	8001216 <_putc_r+0x1a>
 8001268:	4b07      	ldr	r3, [pc, #28]	; (8001288 <_putc_r+0x8c>)
 800126a:	429c      	cmp	r4, r3
 800126c:	bf08      	it	eq
 800126e:	68f4      	ldreq	r4, [r6, #12]
 8001270:	e7d1      	b.n	8001216 <_putc_r+0x1a>
 8001272:	4629      	mov	r1, r5
 8001274:	4622      	mov	r2, r4
 8001276:	4630      	mov	r0, r6
 8001278:	f000 f85c 	bl	8001334 <__swbuf_r>
 800127c:	4605      	mov	r5, r0
 800127e:	e7e3      	b.n	8001248 <_putc_r+0x4c>
 8001280:	080019cc 	.word	0x080019cc
 8001284:	080019ec 	.word	0x080019ec
 8001288:	080019ac 	.word	0x080019ac

0800128c <_sbrk_r>:
 800128c:	b538      	push	{r3, r4, r5, lr}
 800128e:	4d06      	ldr	r5, [pc, #24]	; (80012a8 <_sbrk_r+0x1c>)
 8001290:	2300      	movs	r3, #0
 8001292:	4604      	mov	r4, r0
 8001294:	4608      	mov	r0, r1
 8001296:	602b      	str	r3, [r5, #0]
 8001298:	f7ff f9b4 	bl	8000604 <_sbrk>
 800129c:	1c43      	adds	r3, r0, #1
 800129e:	d102      	bne.n	80012a6 <_sbrk_r+0x1a>
 80012a0:	682b      	ldr	r3, [r5, #0]
 80012a2:	b103      	cbz	r3, 80012a6 <_sbrk_r+0x1a>
 80012a4:	6023      	str	r3, [r4, #0]
 80012a6:	bd38      	pop	{r3, r4, r5, pc}
 80012a8:	200000d8 	.word	0x200000d8

080012ac <__sread>:
 80012ac:	b510      	push	{r4, lr}
 80012ae:	460c      	mov	r4, r1
 80012b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012b4:	f000 fa6e 	bl	8001794 <_read_r>
 80012b8:	2800      	cmp	r0, #0
 80012ba:	bfab      	itete	ge
 80012bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80012be:	89a3      	ldrhlt	r3, [r4, #12]
 80012c0:	181b      	addge	r3, r3, r0
 80012c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012c6:	bfac      	ite	ge
 80012c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80012ca:	81a3      	strhlt	r3, [r4, #12]
 80012cc:	bd10      	pop	{r4, pc}

080012ce <__swrite>:
 80012ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012d2:	461f      	mov	r7, r3
 80012d4:	898b      	ldrh	r3, [r1, #12]
 80012d6:	05db      	lsls	r3, r3, #23
 80012d8:	4605      	mov	r5, r0
 80012da:	460c      	mov	r4, r1
 80012dc:	4616      	mov	r6, r2
 80012de:	d505      	bpl.n	80012ec <__swrite+0x1e>
 80012e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e4:	2302      	movs	r3, #2
 80012e6:	2200      	movs	r2, #0
 80012e8:	f000 f9d0 	bl	800168c <_lseek_r>
 80012ec:	89a3      	ldrh	r3, [r4, #12]
 80012ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012f6:	81a3      	strh	r3, [r4, #12]
 80012f8:	4632      	mov	r2, r6
 80012fa:	463b      	mov	r3, r7
 80012fc:	4628      	mov	r0, r5
 80012fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001302:	f000 b869 	b.w	80013d8 <_write_r>

08001306 <__sseek>:
 8001306:	b510      	push	{r4, lr}
 8001308:	460c      	mov	r4, r1
 800130a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800130e:	f000 f9bd 	bl	800168c <_lseek_r>
 8001312:	1c43      	adds	r3, r0, #1
 8001314:	89a3      	ldrh	r3, [r4, #12]
 8001316:	bf15      	itete	ne
 8001318:	6560      	strne	r0, [r4, #84]	; 0x54
 800131a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800131e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001322:	81a3      	strheq	r3, [r4, #12]
 8001324:	bf18      	it	ne
 8001326:	81a3      	strhne	r3, [r4, #12]
 8001328:	bd10      	pop	{r4, pc}

0800132a <__sclose>:
 800132a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800132e:	f000 b8db 	b.w	80014e8 <_close_r>
	...

08001334 <__swbuf_r>:
 8001334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001336:	460e      	mov	r6, r1
 8001338:	4614      	mov	r4, r2
 800133a:	4605      	mov	r5, r0
 800133c:	b118      	cbz	r0, 8001346 <__swbuf_r+0x12>
 800133e:	6983      	ldr	r3, [r0, #24]
 8001340:	b90b      	cbnz	r3, 8001346 <__swbuf_r+0x12>
 8001342:	f7ff fad3 	bl	80008ec <__sinit>
 8001346:	4b21      	ldr	r3, [pc, #132]	; (80013cc <__swbuf_r+0x98>)
 8001348:	429c      	cmp	r4, r3
 800134a:	d12b      	bne.n	80013a4 <__swbuf_r+0x70>
 800134c:	686c      	ldr	r4, [r5, #4]
 800134e:	69a3      	ldr	r3, [r4, #24]
 8001350:	60a3      	str	r3, [r4, #8]
 8001352:	89a3      	ldrh	r3, [r4, #12]
 8001354:	071a      	lsls	r2, r3, #28
 8001356:	d52f      	bpl.n	80013b8 <__swbuf_r+0x84>
 8001358:	6923      	ldr	r3, [r4, #16]
 800135a:	b36b      	cbz	r3, 80013b8 <__swbuf_r+0x84>
 800135c:	6923      	ldr	r3, [r4, #16]
 800135e:	6820      	ldr	r0, [r4, #0]
 8001360:	1ac0      	subs	r0, r0, r3
 8001362:	6963      	ldr	r3, [r4, #20]
 8001364:	b2f6      	uxtb	r6, r6
 8001366:	4283      	cmp	r3, r0
 8001368:	4637      	mov	r7, r6
 800136a:	dc04      	bgt.n	8001376 <__swbuf_r+0x42>
 800136c:	4621      	mov	r1, r4
 800136e:	4628      	mov	r0, r5
 8001370:	f000 f950 	bl	8001614 <_fflush_r>
 8001374:	bb30      	cbnz	r0, 80013c4 <__swbuf_r+0x90>
 8001376:	68a3      	ldr	r3, [r4, #8]
 8001378:	3b01      	subs	r3, #1
 800137a:	60a3      	str	r3, [r4, #8]
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	1c5a      	adds	r2, r3, #1
 8001380:	6022      	str	r2, [r4, #0]
 8001382:	701e      	strb	r6, [r3, #0]
 8001384:	6963      	ldr	r3, [r4, #20]
 8001386:	3001      	adds	r0, #1
 8001388:	4283      	cmp	r3, r0
 800138a:	d004      	beq.n	8001396 <__swbuf_r+0x62>
 800138c:	89a3      	ldrh	r3, [r4, #12]
 800138e:	07db      	lsls	r3, r3, #31
 8001390:	d506      	bpl.n	80013a0 <__swbuf_r+0x6c>
 8001392:	2e0a      	cmp	r6, #10
 8001394:	d104      	bne.n	80013a0 <__swbuf_r+0x6c>
 8001396:	4621      	mov	r1, r4
 8001398:	4628      	mov	r0, r5
 800139a:	f000 f93b 	bl	8001614 <_fflush_r>
 800139e:	b988      	cbnz	r0, 80013c4 <__swbuf_r+0x90>
 80013a0:	4638      	mov	r0, r7
 80013a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013a4:	4b0a      	ldr	r3, [pc, #40]	; (80013d0 <__swbuf_r+0x9c>)
 80013a6:	429c      	cmp	r4, r3
 80013a8:	d101      	bne.n	80013ae <__swbuf_r+0x7a>
 80013aa:	68ac      	ldr	r4, [r5, #8]
 80013ac:	e7cf      	b.n	800134e <__swbuf_r+0x1a>
 80013ae:	4b09      	ldr	r3, [pc, #36]	; (80013d4 <__swbuf_r+0xa0>)
 80013b0:	429c      	cmp	r4, r3
 80013b2:	bf08      	it	eq
 80013b4:	68ec      	ldreq	r4, [r5, #12]
 80013b6:	e7ca      	b.n	800134e <__swbuf_r+0x1a>
 80013b8:	4621      	mov	r1, r4
 80013ba:	4628      	mov	r0, r5
 80013bc:	f000 f81e 	bl	80013fc <__swsetup_r>
 80013c0:	2800      	cmp	r0, #0
 80013c2:	d0cb      	beq.n	800135c <__swbuf_r+0x28>
 80013c4:	f04f 37ff 	mov.w	r7, #4294967295
 80013c8:	e7ea      	b.n	80013a0 <__swbuf_r+0x6c>
 80013ca:	bf00      	nop
 80013cc:	080019cc 	.word	0x080019cc
 80013d0:	080019ec 	.word	0x080019ec
 80013d4:	080019ac 	.word	0x080019ac

080013d8 <_write_r>:
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4d07      	ldr	r5, [pc, #28]	; (80013f8 <_write_r+0x20>)
 80013dc:	4604      	mov	r4, r0
 80013de:	4608      	mov	r0, r1
 80013e0:	4611      	mov	r1, r2
 80013e2:	2200      	movs	r2, #0
 80013e4:	602a      	str	r2, [r5, #0]
 80013e6:	461a      	mov	r2, r3
 80013e8:	f7ff f8bb 	bl	8000562 <_write>
 80013ec:	1c43      	adds	r3, r0, #1
 80013ee:	d102      	bne.n	80013f6 <_write_r+0x1e>
 80013f0:	682b      	ldr	r3, [r5, #0]
 80013f2:	b103      	cbz	r3, 80013f6 <_write_r+0x1e>
 80013f4:	6023      	str	r3, [r4, #0]
 80013f6:	bd38      	pop	{r3, r4, r5, pc}
 80013f8:	200000d8 	.word	0x200000d8

080013fc <__swsetup_r>:
 80013fc:	4b32      	ldr	r3, [pc, #200]	; (80014c8 <__swsetup_r+0xcc>)
 80013fe:	b570      	push	{r4, r5, r6, lr}
 8001400:	681d      	ldr	r5, [r3, #0]
 8001402:	4606      	mov	r6, r0
 8001404:	460c      	mov	r4, r1
 8001406:	b125      	cbz	r5, 8001412 <__swsetup_r+0x16>
 8001408:	69ab      	ldr	r3, [r5, #24]
 800140a:	b913      	cbnz	r3, 8001412 <__swsetup_r+0x16>
 800140c:	4628      	mov	r0, r5
 800140e:	f7ff fa6d 	bl	80008ec <__sinit>
 8001412:	4b2e      	ldr	r3, [pc, #184]	; (80014cc <__swsetup_r+0xd0>)
 8001414:	429c      	cmp	r4, r3
 8001416:	d10f      	bne.n	8001438 <__swsetup_r+0x3c>
 8001418:	686c      	ldr	r4, [r5, #4]
 800141a:	89a3      	ldrh	r3, [r4, #12]
 800141c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001420:	0719      	lsls	r1, r3, #28
 8001422:	d42c      	bmi.n	800147e <__swsetup_r+0x82>
 8001424:	06dd      	lsls	r5, r3, #27
 8001426:	d411      	bmi.n	800144c <__swsetup_r+0x50>
 8001428:	2309      	movs	r3, #9
 800142a:	6033      	str	r3, [r6, #0]
 800142c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001430:	81a3      	strh	r3, [r4, #12]
 8001432:	f04f 30ff 	mov.w	r0, #4294967295
 8001436:	e03e      	b.n	80014b6 <__swsetup_r+0xba>
 8001438:	4b25      	ldr	r3, [pc, #148]	; (80014d0 <__swsetup_r+0xd4>)
 800143a:	429c      	cmp	r4, r3
 800143c:	d101      	bne.n	8001442 <__swsetup_r+0x46>
 800143e:	68ac      	ldr	r4, [r5, #8]
 8001440:	e7eb      	b.n	800141a <__swsetup_r+0x1e>
 8001442:	4b24      	ldr	r3, [pc, #144]	; (80014d4 <__swsetup_r+0xd8>)
 8001444:	429c      	cmp	r4, r3
 8001446:	bf08      	it	eq
 8001448:	68ec      	ldreq	r4, [r5, #12]
 800144a:	e7e6      	b.n	800141a <__swsetup_r+0x1e>
 800144c:	0758      	lsls	r0, r3, #29
 800144e:	d512      	bpl.n	8001476 <__swsetup_r+0x7a>
 8001450:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001452:	b141      	cbz	r1, 8001466 <__swsetup_r+0x6a>
 8001454:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001458:	4299      	cmp	r1, r3
 800145a:	d002      	beq.n	8001462 <__swsetup_r+0x66>
 800145c:	4630      	mov	r0, r6
 800145e:	f7ff faff 	bl	8000a60 <_free_r>
 8001462:	2300      	movs	r3, #0
 8001464:	6363      	str	r3, [r4, #52]	; 0x34
 8001466:	89a3      	ldrh	r3, [r4, #12]
 8001468:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800146c:	81a3      	strh	r3, [r4, #12]
 800146e:	2300      	movs	r3, #0
 8001470:	6063      	str	r3, [r4, #4]
 8001472:	6923      	ldr	r3, [r4, #16]
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	89a3      	ldrh	r3, [r4, #12]
 8001478:	f043 0308 	orr.w	r3, r3, #8
 800147c:	81a3      	strh	r3, [r4, #12]
 800147e:	6923      	ldr	r3, [r4, #16]
 8001480:	b94b      	cbnz	r3, 8001496 <__swsetup_r+0x9a>
 8001482:	89a3      	ldrh	r3, [r4, #12]
 8001484:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001488:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800148c:	d003      	beq.n	8001496 <__swsetup_r+0x9a>
 800148e:	4621      	mov	r1, r4
 8001490:	4630      	mov	r0, r6
 8001492:	f000 f933 	bl	80016fc <__smakebuf_r>
 8001496:	89a0      	ldrh	r0, [r4, #12]
 8001498:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800149c:	f010 0301 	ands.w	r3, r0, #1
 80014a0:	d00a      	beq.n	80014b8 <__swsetup_r+0xbc>
 80014a2:	2300      	movs	r3, #0
 80014a4:	60a3      	str	r3, [r4, #8]
 80014a6:	6963      	ldr	r3, [r4, #20]
 80014a8:	425b      	negs	r3, r3
 80014aa:	61a3      	str	r3, [r4, #24]
 80014ac:	6923      	ldr	r3, [r4, #16]
 80014ae:	b943      	cbnz	r3, 80014c2 <__swsetup_r+0xc6>
 80014b0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80014b4:	d1ba      	bne.n	800142c <__swsetup_r+0x30>
 80014b6:	bd70      	pop	{r4, r5, r6, pc}
 80014b8:	0781      	lsls	r1, r0, #30
 80014ba:	bf58      	it	pl
 80014bc:	6963      	ldrpl	r3, [r4, #20]
 80014be:	60a3      	str	r3, [r4, #8]
 80014c0:	e7f4      	b.n	80014ac <__swsetup_r+0xb0>
 80014c2:	2000      	movs	r0, #0
 80014c4:	e7f7      	b.n	80014b6 <__swsetup_r+0xba>
 80014c6:	bf00      	nop
 80014c8:	20000048 	.word	0x20000048
 80014cc:	080019cc 	.word	0x080019cc
 80014d0:	080019ec 	.word	0x080019ec
 80014d4:	080019ac 	.word	0x080019ac

080014d8 <abort>:
 80014d8:	b508      	push	{r3, lr}
 80014da:	2006      	movs	r0, #6
 80014dc:	f000 f994 	bl	8001808 <raise>
 80014e0:	2001      	movs	r0, #1
 80014e2:	f7ff f817 	bl	8000514 <_exit>
	...

080014e8 <_close_r>:
 80014e8:	b538      	push	{r3, r4, r5, lr}
 80014ea:	4d06      	ldr	r5, [pc, #24]	; (8001504 <_close_r+0x1c>)
 80014ec:	2300      	movs	r3, #0
 80014ee:	4604      	mov	r4, r0
 80014f0:	4608      	mov	r0, r1
 80014f2:	602b      	str	r3, [r5, #0]
 80014f4:	f7ff f851 	bl	800059a <_close>
 80014f8:	1c43      	adds	r3, r0, #1
 80014fa:	d102      	bne.n	8001502 <_close_r+0x1a>
 80014fc:	682b      	ldr	r3, [r5, #0]
 80014fe:	b103      	cbz	r3, 8001502 <_close_r+0x1a>
 8001500:	6023      	str	r3, [r4, #0]
 8001502:	bd38      	pop	{r3, r4, r5, pc}
 8001504:	200000d8 	.word	0x200000d8

08001508 <__sflush_r>:
 8001508:	898a      	ldrh	r2, [r1, #12]
 800150a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800150e:	4605      	mov	r5, r0
 8001510:	0710      	lsls	r0, r2, #28
 8001512:	460c      	mov	r4, r1
 8001514:	d458      	bmi.n	80015c8 <__sflush_r+0xc0>
 8001516:	684b      	ldr	r3, [r1, #4]
 8001518:	2b00      	cmp	r3, #0
 800151a:	dc05      	bgt.n	8001528 <__sflush_r+0x20>
 800151c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800151e:	2b00      	cmp	r3, #0
 8001520:	dc02      	bgt.n	8001528 <__sflush_r+0x20>
 8001522:	2000      	movs	r0, #0
 8001524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001528:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800152a:	2e00      	cmp	r6, #0
 800152c:	d0f9      	beq.n	8001522 <__sflush_r+0x1a>
 800152e:	2300      	movs	r3, #0
 8001530:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001534:	682f      	ldr	r7, [r5, #0]
 8001536:	602b      	str	r3, [r5, #0]
 8001538:	d032      	beq.n	80015a0 <__sflush_r+0x98>
 800153a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800153c:	89a3      	ldrh	r3, [r4, #12]
 800153e:	075a      	lsls	r2, r3, #29
 8001540:	d505      	bpl.n	800154e <__sflush_r+0x46>
 8001542:	6863      	ldr	r3, [r4, #4]
 8001544:	1ac0      	subs	r0, r0, r3
 8001546:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001548:	b10b      	cbz	r3, 800154e <__sflush_r+0x46>
 800154a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800154c:	1ac0      	subs	r0, r0, r3
 800154e:	2300      	movs	r3, #0
 8001550:	4602      	mov	r2, r0
 8001552:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001554:	6a21      	ldr	r1, [r4, #32]
 8001556:	4628      	mov	r0, r5
 8001558:	47b0      	blx	r6
 800155a:	1c43      	adds	r3, r0, #1
 800155c:	89a3      	ldrh	r3, [r4, #12]
 800155e:	d106      	bne.n	800156e <__sflush_r+0x66>
 8001560:	6829      	ldr	r1, [r5, #0]
 8001562:	291d      	cmp	r1, #29
 8001564:	d82c      	bhi.n	80015c0 <__sflush_r+0xb8>
 8001566:	4a2a      	ldr	r2, [pc, #168]	; (8001610 <__sflush_r+0x108>)
 8001568:	40ca      	lsrs	r2, r1
 800156a:	07d6      	lsls	r6, r2, #31
 800156c:	d528      	bpl.n	80015c0 <__sflush_r+0xb8>
 800156e:	2200      	movs	r2, #0
 8001570:	6062      	str	r2, [r4, #4]
 8001572:	04d9      	lsls	r1, r3, #19
 8001574:	6922      	ldr	r2, [r4, #16]
 8001576:	6022      	str	r2, [r4, #0]
 8001578:	d504      	bpl.n	8001584 <__sflush_r+0x7c>
 800157a:	1c42      	adds	r2, r0, #1
 800157c:	d101      	bne.n	8001582 <__sflush_r+0x7a>
 800157e:	682b      	ldr	r3, [r5, #0]
 8001580:	b903      	cbnz	r3, 8001584 <__sflush_r+0x7c>
 8001582:	6560      	str	r0, [r4, #84]	; 0x54
 8001584:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001586:	602f      	str	r7, [r5, #0]
 8001588:	2900      	cmp	r1, #0
 800158a:	d0ca      	beq.n	8001522 <__sflush_r+0x1a>
 800158c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001590:	4299      	cmp	r1, r3
 8001592:	d002      	beq.n	800159a <__sflush_r+0x92>
 8001594:	4628      	mov	r0, r5
 8001596:	f7ff fa63 	bl	8000a60 <_free_r>
 800159a:	2000      	movs	r0, #0
 800159c:	6360      	str	r0, [r4, #52]	; 0x34
 800159e:	e7c1      	b.n	8001524 <__sflush_r+0x1c>
 80015a0:	6a21      	ldr	r1, [r4, #32]
 80015a2:	2301      	movs	r3, #1
 80015a4:	4628      	mov	r0, r5
 80015a6:	47b0      	blx	r6
 80015a8:	1c41      	adds	r1, r0, #1
 80015aa:	d1c7      	bne.n	800153c <__sflush_r+0x34>
 80015ac:	682b      	ldr	r3, [r5, #0]
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d0c4      	beq.n	800153c <__sflush_r+0x34>
 80015b2:	2b1d      	cmp	r3, #29
 80015b4:	d001      	beq.n	80015ba <__sflush_r+0xb2>
 80015b6:	2b16      	cmp	r3, #22
 80015b8:	d101      	bne.n	80015be <__sflush_r+0xb6>
 80015ba:	602f      	str	r7, [r5, #0]
 80015bc:	e7b1      	b.n	8001522 <__sflush_r+0x1a>
 80015be:	89a3      	ldrh	r3, [r4, #12]
 80015c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015c4:	81a3      	strh	r3, [r4, #12]
 80015c6:	e7ad      	b.n	8001524 <__sflush_r+0x1c>
 80015c8:	690f      	ldr	r7, [r1, #16]
 80015ca:	2f00      	cmp	r7, #0
 80015cc:	d0a9      	beq.n	8001522 <__sflush_r+0x1a>
 80015ce:	0793      	lsls	r3, r2, #30
 80015d0:	680e      	ldr	r6, [r1, #0]
 80015d2:	bf08      	it	eq
 80015d4:	694b      	ldreq	r3, [r1, #20]
 80015d6:	600f      	str	r7, [r1, #0]
 80015d8:	bf18      	it	ne
 80015da:	2300      	movne	r3, #0
 80015dc:	eba6 0807 	sub.w	r8, r6, r7
 80015e0:	608b      	str	r3, [r1, #8]
 80015e2:	f1b8 0f00 	cmp.w	r8, #0
 80015e6:	dd9c      	ble.n	8001522 <__sflush_r+0x1a>
 80015e8:	6a21      	ldr	r1, [r4, #32]
 80015ea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015ec:	4643      	mov	r3, r8
 80015ee:	463a      	mov	r2, r7
 80015f0:	4628      	mov	r0, r5
 80015f2:	47b0      	blx	r6
 80015f4:	2800      	cmp	r0, #0
 80015f6:	dc06      	bgt.n	8001606 <__sflush_r+0xfe>
 80015f8:	89a3      	ldrh	r3, [r4, #12]
 80015fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015fe:	81a3      	strh	r3, [r4, #12]
 8001600:	f04f 30ff 	mov.w	r0, #4294967295
 8001604:	e78e      	b.n	8001524 <__sflush_r+0x1c>
 8001606:	4407      	add	r7, r0
 8001608:	eba8 0800 	sub.w	r8, r8, r0
 800160c:	e7e9      	b.n	80015e2 <__sflush_r+0xda>
 800160e:	bf00      	nop
 8001610:	20400001 	.word	0x20400001

08001614 <_fflush_r>:
 8001614:	b538      	push	{r3, r4, r5, lr}
 8001616:	690b      	ldr	r3, [r1, #16]
 8001618:	4605      	mov	r5, r0
 800161a:	460c      	mov	r4, r1
 800161c:	b913      	cbnz	r3, 8001624 <_fflush_r+0x10>
 800161e:	2500      	movs	r5, #0
 8001620:	4628      	mov	r0, r5
 8001622:	bd38      	pop	{r3, r4, r5, pc}
 8001624:	b118      	cbz	r0, 800162e <_fflush_r+0x1a>
 8001626:	6983      	ldr	r3, [r0, #24]
 8001628:	b90b      	cbnz	r3, 800162e <_fflush_r+0x1a>
 800162a:	f7ff f95f 	bl	80008ec <__sinit>
 800162e:	4b14      	ldr	r3, [pc, #80]	; (8001680 <_fflush_r+0x6c>)
 8001630:	429c      	cmp	r4, r3
 8001632:	d11b      	bne.n	800166c <_fflush_r+0x58>
 8001634:	686c      	ldr	r4, [r5, #4]
 8001636:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800163a:	2b00      	cmp	r3, #0
 800163c:	d0ef      	beq.n	800161e <_fflush_r+0xa>
 800163e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001640:	07d0      	lsls	r0, r2, #31
 8001642:	d404      	bmi.n	800164e <_fflush_r+0x3a>
 8001644:	0599      	lsls	r1, r3, #22
 8001646:	d402      	bmi.n	800164e <_fflush_r+0x3a>
 8001648:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800164a:	f7ff f9ff 	bl	8000a4c <__retarget_lock_acquire_recursive>
 800164e:	4628      	mov	r0, r5
 8001650:	4621      	mov	r1, r4
 8001652:	f7ff ff59 	bl	8001508 <__sflush_r>
 8001656:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001658:	07da      	lsls	r2, r3, #31
 800165a:	4605      	mov	r5, r0
 800165c:	d4e0      	bmi.n	8001620 <_fflush_r+0xc>
 800165e:	89a3      	ldrh	r3, [r4, #12]
 8001660:	059b      	lsls	r3, r3, #22
 8001662:	d4dd      	bmi.n	8001620 <_fflush_r+0xc>
 8001664:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001666:	f7ff f9f2 	bl	8000a4e <__retarget_lock_release_recursive>
 800166a:	e7d9      	b.n	8001620 <_fflush_r+0xc>
 800166c:	4b05      	ldr	r3, [pc, #20]	; (8001684 <_fflush_r+0x70>)
 800166e:	429c      	cmp	r4, r3
 8001670:	d101      	bne.n	8001676 <_fflush_r+0x62>
 8001672:	68ac      	ldr	r4, [r5, #8]
 8001674:	e7df      	b.n	8001636 <_fflush_r+0x22>
 8001676:	4b04      	ldr	r3, [pc, #16]	; (8001688 <_fflush_r+0x74>)
 8001678:	429c      	cmp	r4, r3
 800167a:	bf08      	it	eq
 800167c:	68ec      	ldreq	r4, [r5, #12]
 800167e:	e7da      	b.n	8001636 <_fflush_r+0x22>
 8001680:	080019cc 	.word	0x080019cc
 8001684:	080019ec 	.word	0x080019ec
 8001688:	080019ac 	.word	0x080019ac

0800168c <_lseek_r>:
 800168c:	b538      	push	{r3, r4, r5, lr}
 800168e:	4d07      	ldr	r5, [pc, #28]	; (80016ac <_lseek_r+0x20>)
 8001690:	4604      	mov	r4, r0
 8001692:	4608      	mov	r0, r1
 8001694:	4611      	mov	r1, r2
 8001696:	2200      	movs	r2, #0
 8001698:	602a      	str	r2, [r5, #0]
 800169a:	461a      	mov	r2, r3
 800169c:	f7fe ffa4 	bl	80005e8 <_lseek>
 80016a0:	1c43      	adds	r3, r0, #1
 80016a2:	d102      	bne.n	80016aa <_lseek_r+0x1e>
 80016a4:	682b      	ldr	r3, [r5, #0]
 80016a6:	b103      	cbz	r3, 80016aa <_lseek_r+0x1e>
 80016a8:	6023      	str	r3, [r4, #0]
 80016aa:	bd38      	pop	{r3, r4, r5, pc}
 80016ac:	200000d8 	.word	0x200000d8

080016b0 <__swhatbuf_r>:
 80016b0:	b570      	push	{r4, r5, r6, lr}
 80016b2:	460e      	mov	r6, r1
 80016b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80016b8:	2900      	cmp	r1, #0
 80016ba:	b096      	sub	sp, #88	; 0x58
 80016bc:	4614      	mov	r4, r2
 80016be:	461d      	mov	r5, r3
 80016c0:	da08      	bge.n	80016d4 <__swhatbuf_r+0x24>
 80016c2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80016c6:	2200      	movs	r2, #0
 80016c8:	602a      	str	r2, [r5, #0]
 80016ca:	061a      	lsls	r2, r3, #24
 80016cc:	d410      	bmi.n	80016f0 <__swhatbuf_r+0x40>
 80016ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016d2:	e00e      	b.n	80016f2 <__swhatbuf_r+0x42>
 80016d4:	466a      	mov	r2, sp
 80016d6:	f000 f8b3 	bl	8001840 <_fstat_r>
 80016da:	2800      	cmp	r0, #0
 80016dc:	dbf1      	blt.n	80016c2 <__swhatbuf_r+0x12>
 80016de:	9a01      	ldr	r2, [sp, #4]
 80016e0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80016e4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80016e8:	425a      	negs	r2, r3
 80016ea:	415a      	adcs	r2, r3
 80016ec:	602a      	str	r2, [r5, #0]
 80016ee:	e7ee      	b.n	80016ce <__swhatbuf_r+0x1e>
 80016f0:	2340      	movs	r3, #64	; 0x40
 80016f2:	2000      	movs	r0, #0
 80016f4:	6023      	str	r3, [r4, #0]
 80016f6:	b016      	add	sp, #88	; 0x58
 80016f8:	bd70      	pop	{r4, r5, r6, pc}
	...

080016fc <__smakebuf_r>:
 80016fc:	898b      	ldrh	r3, [r1, #12]
 80016fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001700:	079d      	lsls	r5, r3, #30
 8001702:	4606      	mov	r6, r0
 8001704:	460c      	mov	r4, r1
 8001706:	d507      	bpl.n	8001718 <__smakebuf_r+0x1c>
 8001708:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800170c:	6023      	str	r3, [r4, #0]
 800170e:	6123      	str	r3, [r4, #16]
 8001710:	2301      	movs	r3, #1
 8001712:	6163      	str	r3, [r4, #20]
 8001714:	b002      	add	sp, #8
 8001716:	bd70      	pop	{r4, r5, r6, pc}
 8001718:	ab01      	add	r3, sp, #4
 800171a:	466a      	mov	r2, sp
 800171c:	f7ff ffc8 	bl	80016b0 <__swhatbuf_r>
 8001720:	9900      	ldr	r1, [sp, #0]
 8001722:	4605      	mov	r5, r0
 8001724:	4630      	mov	r0, r6
 8001726:	f7ff fa07 	bl	8000b38 <_malloc_r>
 800172a:	b948      	cbnz	r0, 8001740 <__smakebuf_r+0x44>
 800172c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001730:	059a      	lsls	r2, r3, #22
 8001732:	d4ef      	bmi.n	8001714 <__smakebuf_r+0x18>
 8001734:	f023 0303 	bic.w	r3, r3, #3
 8001738:	f043 0302 	orr.w	r3, r3, #2
 800173c:	81a3      	strh	r3, [r4, #12]
 800173e:	e7e3      	b.n	8001708 <__smakebuf_r+0xc>
 8001740:	4b0d      	ldr	r3, [pc, #52]	; (8001778 <__smakebuf_r+0x7c>)
 8001742:	62b3      	str	r3, [r6, #40]	; 0x28
 8001744:	89a3      	ldrh	r3, [r4, #12]
 8001746:	6020      	str	r0, [r4, #0]
 8001748:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800174c:	81a3      	strh	r3, [r4, #12]
 800174e:	9b00      	ldr	r3, [sp, #0]
 8001750:	6163      	str	r3, [r4, #20]
 8001752:	9b01      	ldr	r3, [sp, #4]
 8001754:	6120      	str	r0, [r4, #16]
 8001756:	b15b      	cbz	r3, 8001770 <__smakebuf_r+0x74>
 8001758:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800175c:	4630      	mov	r0, r6
 800175e:	f000 f881 	bl	8001864 <_isatty_r>
 8001762:	b128      	cbz	r0, 8001770 <__smakebuf_r+0x74>
 8001764:	89a3      	ldrh	r3, [r4, #12]
 8001766:	f023 0303 	bic.w	r3, r3, #3
 800176a:	f043 0301 	orr.w	r3, r3, #1
 800176e:	81a3      	strh	r3, [r4, #12]
 8001770:	89a0      	ldrh	r0, [r4, #12]
 8001772:	4305      	orrs	r5, r0
 8001774:	81a5      	strh	r5, [r4, #12]
 8001776:	e7cd      	b.n	8001714 <__smakebuf_r+0x18>
 8001778:	08000885 	.word	0x08000885

0800177c <__malloc_lock>:
 800177c:	4801      	ldr	r0, [pc, #4]	; (8001784 <__malloc_lock+0x8>)
 800177e:	f7ff b965 	b.w	8000a4c <__retarget_lock_acquire_recursive>
 8001782:	bf00      	nop
 8001784:	200000cc 	.word	0x200000cc

08001788 <__malloc_unlock>:
 8001788:	4801      	ldr	r0, [pc, #4]	; (8001790 <__malloc_unlock+0x8>)
 800178a:	f7ff b960 	b.w	8000a4e <__retarget_lock_release_recursive>
 800178e:	bf00      	nop
 8001790:	200000cc 	.word	0x200000cc

08001794 <_read_r>:
 8001794:	b538      	push	{r3, r4, r5, lr}
 8001796:	4d07      	ldr	r5, [pc, #28]	; (80017b4 <_read_r+0x20>)
 8001798:	4604      	mov	r4, r0
 800179a:	4608      	mov	r0, r1
 800179c:	4611      	mov	r1, r2
 800179e:	2200      	movs	r2, #0
 80017a0:	602a      	str	r2, [r5, #0]
 80017a2:	461a      	mov	r2, r3
 80017a4:	f7fe fec0 	bl	8000528 <_read>
 80017a8:	1c43      	adds	r3, r0, #1
 80017aa:	d102      	bne.n	80017b2 <_read_r+0x1e>
 80017ac:	682b      	ldr	r3, [r5, #0]
 80017ae:	b103      	cbz	r3, 80017b2 <_read_r+0x1e>
 80017b0:	6023      	str	r3, [r4, #0]
 80017b2:	bd38      	pop	{r3, r4, r5, pc}
 80017b4:	200000d8 	.word	0x200000d8

080017b8 <_raise_r>:
 80017b8:	291f      	cmp	r1, #31
 80017ba:	b538      	push	{r3, r4, r5, lr}
 80017bc:	4604      	mov	r4, r0
 80017be:	460d      	mov	r5, r1
 80017c0:	d904      	bls.n	80017cc <_raise_r+0x14>
 80017c2:	2316      	movs	r3, #22
 80017c4:	6003      	str	r3, [r0, #0]
 80017c6:	f04f 30ff 	mov.w	r0, #4294967295
 80017ca:	bd38      	pop	{r3, r4, r5, pc}
 80017cc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80017ce:	b112      	cbz	r2, 80017d6 <_raise_r+0x1e>
 80017d0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80017d4:	b94b      	cbnz	r3, 80017ea <_raise_r+0x32>
 80017d6:	4620      	mov	r0, r4
 80017d8:	f000 f830 	bl	800183c <_getpid_r>
 80017dc:	462a      	mov	r2, r5
 80017de:	4601      	mov	r1, r0
 80017e0:	4620      	mov	r0, r4
 80017e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80017e6:	f000 b817 	b.w	8001818 <_kill_r>
 80017ea:	2b01      	cmp	r3, #1
 80017ec:	d00a      	beq.n	8001804 <_raise_r+0x4c>
 80017ee:	1c59      	adds	r1, r3, #1
 80017f0:	d103      	bne.n	80017fa <_raise_r+0x42>
 80017f2:	2316      	movs	r3, #22
 80017f4:	6003      	str	r3, [r0, #0]
 80017f6:	2001      	movs	r0, #1
 80017f8:	e7e7      	b.n	80017ca <_raise_r+0x12>
 80017fa:	2400      	movs	r4, #0
 80017fc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001800:	4628      	mov	r0, r5
 8001802:	4798      	blx	r3
 8001804:	2000      	movs	r0, #0
 8001806:	e7e0      	b.n	80017ca <_raise_r+0x12>

08001808 <raise>:
 8001808:	4b02      	ldr	r3, [pc, #8]	; (8001814 <raise+0xc>)
 800180a:	4601      	mov	r1, r0
 800180c:	6818      	ldr	r0, [r3, #0]
 800180e:	f7ff bfd3 	b.w	80017b8 <_raise_r>
 8001812:	bf00      	nop
 8001814:	20000048 	.word	0x20000048

08001818 <_kill_r>:
 8001818:	b538      	push	{r3, r4, r5, lr}
 800181a:	4d07      	ldr	r5, [pc, #28]	; (8001838 <_kill_r+0x20>)
 800181c:	2300      	movs	r3, #0
 800181e:	4604      	mov	r4, r0
 8001820:	4608      	mov	r0, r1
 8001822:	4611      	mov	r1, r2
 8001824:	602b      	str	r3, [r5, #0]
 8001826:	f7fe fe65 	bl	80004f4 <_kill>
 800182a:	1c43      	adds	r3, r0, #1
 800182c:	d102      	bne.n	8001834 <_kill_r+0x1c>
 800182e:	682b      	ldr	r3, [r5, #0]
 8001830:	b103      	cbz	r3, 8001834 <_kill_r+0x1c>
 8001832:	6023      	str	r3, [r4, #0]
 8001834:	bd38      	pop	{r3, r4, r5, pc}
 8001836:	bf00      	nop
 8001838:	200000d8 	.word	0x200000d8

0800183c <_getpid_r>:
 800183c:	f7fe be52 	b.w	80004e4 <_getpid>

08001840 <_fstat_r>:
 8001840:	b538      	push	{r3, r4, r5, lr}
 8001842:	4d07      	ldr	r5, [pc, #28]	; (8001860 <_fstat_r+0x20>)
 8001844:	2300      	movs	r3, #0
 8001846:	4604      	mov	r4, r0
 8001848:	4608      	mov	r0, r1
 800184a:	4611      	mov	r1, r2
 800184c:	602b      	str	r3, [r5, #0]
 800184e:	f7fe feb0 	bl	80005b2 <_fstat>
 8001852:	1c43      	adds	r3, r0, #1
 8001854:	d102      	bne.n	800185c <_fstat_r+0x1c>
 8001856:	682b      	ldr	r3, [r5, #0]
 8001858:	b103      	cbz	r3, 800185c <_fstat_r+0x1c>
 800185a:	6023      	str	r3, [r4, #0]
 800185c:	bd38      	pop	{r3, r4, r5, pc}
 800185e:	bf00      	nop
 8001860:	200000d8 	.word	0x200000d8

08001864 <_isatty_r>:
 8001864:	b538      	push	{r3, r4, r5, lr}
 8001866:	4d06      	ldr	r5, [pc, #24]	; (8001880 <_isatty_r+0x1c>)
 8001868:	2300      	movs	r3, #0
 800186a:	4604      	mov	r4, r0
 800186c:	4608      	mov	r0, r1
 800186e:	602b      	str	r3, [r5, #0]
 8001870:	f7fe feaf 	bl	80005d2 <_isatty>
 8001874:	1c43      	adds	r3, r0, #1
 8001876:	d102      	bne.n	800187e <_isatty_r+0x1a>
 8001878:	682b      	ldr	r3, [r5, #0]
 800187a:	b103      	cbz	r3, 800187e <_isatty_r+0x1a>
 800187c:	6023      	str	r3, [r4, #0]
 800187e:	bd38      	pop	{r3, r4, r5, pc}
 8001880:	200000d8 	.word	0x200000d8

08001884 <_init>:
 8001884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001886:	bf00      	nop
 8001888:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800188a:	bc08      	pop	{r3}
 800188c:	469e      	mov	lr, r3
 800188e:	4770      	bx	lr

08001890 <_fini>:
 8001890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001892:	bf00      	nop
 8001894:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001896:	bc08      	pop	{r3}
 8001898:	469e      	mov	lr, r3
 800189a:	4770      	bx	lr
