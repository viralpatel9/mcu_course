
stm32f4xx_drives.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000069c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000844  0800084c  0001084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000844  08000844  0001084c  2**0
                  CONTENTS
  4 .ARM          00000000  08000844  08000844  0001084c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000844  0800084c  0001084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000844  08000844  00010844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000848  08000848  00010848  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001084c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0001084c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a51  00000000  00000000  00010876  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000293  00000000  00000000  000112c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00011560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00011620  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000019fb  00000000  00000000  000116b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ed7  00000000  00000000  000130b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000624c  00000000  00000000  00013f8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001a1d6  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000024c  00000000  00000000  0001a228  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800082c 	.word	0x0800082c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800082c 	.word	0x0800082c

080001e8 <delay>:
 */

#include "stm32f407xx.h"
#include <stdint.h>

void delay(void) {
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000; i++)
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
		;
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	bc80      	pop	{r7}
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	0007a11f 	.word	0x0007a11f

08000214 <main>:
int main(void) {
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0
	/* Loop forever */
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOD;
 800021a:	4b0d      	ldr	r3, [pc, #52]	; (8000250 <main+0x3c>)
 800021c:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800022a:	2301      	movs	r3, #1
 800022c:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800022e:	2300      	movs	r3, #0
 8000230:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4806      	ldr	r0, [pc, #24]	; (8000250 <main+0x3c>)
 8000236:	f000 f837 	bl	80002a8 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 800023a:	1d3b      	adds	r3, r7, #4
 800023c:	4618      	mov	r0, r3
 800023e:	f000 f91b 	bl	8000478 <GPIO_Init>

	while (1) {
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000242:	210c      	movs	r1, #12
 8000244:	4802      	ldr	r0, [pc, #8]	; (8000250 <main+0x3c>)
 8000246:	f000 fab9 	bl	80007bc <GPIO_ToggleOutputPin>
		delay();
 800024a:	f7ff ffcd 	bl	80001e8 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800024e:	e7f8      	b.n	8000242 <main+0x2e>
 8000250:	40020c00 	.word	0x40020c00

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 faaf 	bl	80007e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffc5 	bl	8000214 <main>

0800028a <LoopForever>:

LoopForever:
    b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	0800084c 	.word	0x0800084c
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <GPIO_PeriClockControl>:
 * @Note			-  None
 *
 *
 *************************************** */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi) {
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
 80002b0:	460b      	mov	r3, r1
 80002b2:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE) {
 80002b4:	78fb      	ldrb	r3, [r7, #3]
 80002b6:	2b01      	cmp	r3, #1
 80002b8:	d162      	bne.n	8000380 <GPIO_PeriClockControl+0xd8>
		if (pGPIOx == GPIOA) {
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	4a64      	ldr	r2, [pc, #400]	; (8000450 <GPIO_PeriClockControl+0x1a8>)
 80002be:	4293      	cmp	r3, r2
 80002c0:	d106      	bne.n	80002d0 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 80002c2:	4b64      	ldr	r3, [pc, #400]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80002c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c6:	4a63      	ldr	r2, [pc, #396]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80002c8:	f043 0301 	orr.w	r3, r3, #1
 80002cc:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOH_PCLK_DI();
		} else if (pGPIOx == GPIOI) {
			GPIOI_PCLK_DI();
		}
	}
}
 80002ce:	e0b9      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a61      	ldr	r2, [pc, #388]	; (8000458 <GPIO_PeriClockControl+0x1b0>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d106      	bne.n	80002e6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002d8:	4b5e      	ldr	r3, [pc, #376]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002dc:	4a5d      	ldr	r2, [pc, #372]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80002de:	f043 0302 	orr.w	r3, r3, #2
 80002e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002e4:	e0ae      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4a5c      	ldr	r2, [pc, #368]	; (800045c <GPIO_PeriClockControl+0x1b4>)
 80002ea:	4293      	cmp	r3, r2
 80002ec:	d106      	bne.n	80002fc <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002ee:	4b59      	ldr	r3, [pc, #356]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80002f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f2:	4a58      	ldr	r2, [pc, #352]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80002f4:	f043 0304 	orr.w	r3, r3, #4
 80002f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002fa:	e0a3      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	4a58      	ldr	r2, [pc, #352]	; (8000460 <GPIO_PeriClockControl+0x1b8>)
 8000300:	4293      	cmp	r3, r2
 8000302:	d106      	bne.n	8000312 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000304:	4b53      	ldr	r3, [pc, #332]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000308:	4a52      	ldr	r2, [pc, #328]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800030a:	f043 0308 	orr.w	r3, r3, #8
 800030e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000310:	e098      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a53      	ldr	r2, [pc, #332]	; (8000464 <GPIO_PeriClockControl+0x1bc>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800031a:	4b4e      	ldr	r3, [pc, #312]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800031c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031e:	4a4d      	ldr	r2, [pc, #308]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000320:	f043 0310 	orr.w	r3, r3, #16
 8000324:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000326:	e08d      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a4f      	ldr	r2, [pc, #316]	; (8000468 <GPIO_PeriClockControl+0x1c0>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d106      	bne.n	800033e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000330:	4b48      	ldr	r3, [pc, #288]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000332:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000334:	4a47      	ldr	r2, [pc, #284]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000336:	f043 0320 	orr.w	r3, r3, #32
 800033a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800033c:	e082      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a4a      	ldr	r2, [pc, #296]	; (800046c <GPIO_PeriClockControl+0x1c4>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000346:	4b43      	ldr	r3, [pc, #268]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a42      	ldr	r2, [pc, #264]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800034c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000352:	e077      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a46      	ldr	r2, [pc, #280]	; (8000470 <GPIO_PeriClockControl+0x1c8>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800035c:	4b3d      	ldr	r3, [pc, #244]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000360:	4a3c      	ldr	r2, [pc, #240]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000366:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000368:	e06c      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a41      	ldr	r2, [pc, #260]	; (8000474 <GPIO_PeriClockControl+0x1cc>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d168      	bne.n	8000444 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000372:	4b38      	ldr	r3, [pc, #224]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000376:	4a37      	ldr	r2, [pc, #220]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000378:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800037c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037e:	e061      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		if (pGPIOx == GPIOA) {
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a33      	ldr	r2, [pc, #204]	; (8000450 <GPIO_PeriClockControl+0x1a8>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000388:	4b32      	ldr	r3, [pc, #200]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038c:	4a31      	ldr	r2, [pc, #196]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800038e:	f023 0301 	bic.w	r3, r3, #1
 8000392:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000394:	e056      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOB) {
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a2f      	ldr	r2, [pc, #188]	; (8000458 <GPIO_PeriClockControl+0x1b0>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 800039e:	4b2d      	ldr	r3, [pc, #180]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a2:	4a2c      	ldr	r2, [pc, #176]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003a4:	f023 0302 	bic.w	r3, r3, #2
 80003a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003aa:	e04b      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOC) {
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a2b      	ldr	r2, [pc, #172]	; (800045c <GPIO_PeriClockControl+0x1b4>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 80003b4:	4b27      	ldr	r3, [pc, #156]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b8:	4a26      	ldr	r2, [pc, #152]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003ba:	f023 0304 	bic.w	r3, r3, #4
 80003be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c0:	e040      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOD) {
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a26      	ldr	r2, [pc, #152]	; (8000460 <GPIO_PeriClockControl+0x1b8>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d106      	bne.n	80003d8 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80003ca:	4b22      	ldr	r3, [pc, #136]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ce:	4a21      	ldr	r2, [pc, #132]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003d0:	f023 0308 	bic.w	r3, r3, #8
 80003d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d6:	e035      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOE) {
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a22      	ldr	r2, [pc, #136]	; (8000464 <GPIO_PeriClockControl+0x1bc>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d106      	bne.n	80003ee <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80003e0:	4b1c      	ldr	r3, [pc, #112]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e4:	4a1b      	ldr	r2, [pc, #108]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003e6:	f023 0310 	bic.w	r3, r3, #16
 80003ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ec:	e02a      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOF) {
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a1d      	ldr	r2, [pc, #116]	; (8000468 <GPIO_PeriClockControl+0x1c0>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d106      	bne.n	8000404 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80003f6:	4b17      	ldr	r3, [pc, #92]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fa:	4a16      	ldr	r2, [pc, #88]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 80003fc:	f023 0320 	bic.w	r3, r3, #32
 8000400:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000402:	e01f      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOG) {
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a19      	ldr	r2, [pc, #100]	; (800046c <GPIO_PeriClockControl+0x1c4>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d106      	bne.n	800041a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800040c:	4b11      	ldr	r3, [pc, #68]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000410:	4a10      	ldr	r2, [pc, #64]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000412:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000416:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000418:	e014      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOH) {
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4a14      	ldr	r2, [pc, #80]	; (8000470 <GPIO_PeriClockControl+0x1c8>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d106      	bne.n	8000430 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000422:	4b0c      	ldr	r3, [pc, #48]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000426:	4a0b      	ldr	r2, [pc, #44]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 8000428:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800042c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042e:	e009      	b.n	8000444 <GPIO_PeriClockControl+0x19c>
		} else if (pGPIOx == GPIOI) {
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	4a10      	ldr	r2, [pc, #64]	; (8000474 <GPIO_PeriClockControl+0x1cc>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d105      	bne.n	8000444 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000438:	4b06      	ldr	r3, [pc, #24]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800043a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043c:	4a05      	ldr	r2, [pc, #20]	; (8000454 <GPIO_PeriClockControl+0x1ac>)
 800043e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000442:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000444:	bf00      	nop
 8000446:	370c      	adds	r7, #12
 8000448:	46bd      	mov	sp, r7
 800044a:	bc80      	pop	{r7}
 800044c:	4770      	bx	lr
 800044e:	bf00      	nop
 8000450:	40020000 	.word	0x40020000
 8000454:	40023800 	.word	0x40023800
 8000458:	40020400 	.word	0x40020400
 800045c:	40020800 	.word	0x40020800
 8000460:	40020c00 	.word	0x40020c00
 8000464:	40021000 	.word	0x40021000
 8000468:	40021400 	.word	0x40021400
 800046c:	40021800 	.word	0x40021800
 8000470:	40021c00 	.word	0x40021c00
 8000474:	40022000 	.word	0x40022000

08000478 <GPIO_Init>:

/*
 * 	Init and Deint of the peripheral
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) {
 8000478:	b580      	push	{r7, lr}
 800047a:	b086      	sub	sp, #24
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 8000480:	2300      	movs	r3, #0
 8000482:	617b      	str	r3, [r7, #20]
	// enable the peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	2101      	movs	r1, #1
 800048a:	4618      	mov	r0, r3
 800048c:	f7ff ff0c 	bl	80002a8 <GPIO_PeriClockControl>

	// Configure the mode of the GPIO pin
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	2b03      	cmp	r3, #3
 8000496:	d81f      	bhi.n	80004d8 <GPIO_Init+0x60>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	795b      	ldrb	r3, [r3, #5]
 800049c:	461a      	mov	r2, r3
				<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	005b      	lsls	r3, r3, #1
 80004a4:	fa02 f303 	lsl.w	r3, r2, r3
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode
 80004a8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x03
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	681a      	ldr	r2, [r3, #0]
				<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // cleraing off the pin number before using it
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	4619      	mov	r1, r3
 80004b6:	2303      	movs	r3, #3
 80004b8:	408b      	lsls	r3, r1
		pGPIOHandle->pGPIOx->MODER &= ~(0x03
 80004ba:	43db      	mvns	r3, r3
 80004bc:	4619      	mov	r1, r3
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	400a      	ands	r2, r1
 80004c4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;			//setting
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	6819      	ldr	r1, [r3, #0]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	697a      	ldr	r2, [r7, #20]
 80004d2:	430a      	orrs	r2, r1
 80004d4:	601a      	str	r2, [r3, #0]
 80004d6:	e0ca      	b.n	800066e <GPIO_Init+0x1f6>

	}
	else
	{
		// this is the interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	2b04      	cmp	r3, #4
 80004de:	d117      	bne.n	8000510 <GPIO_Init+0x98>
		{
			//1. Configure the FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004e0:	4b4a      	ldr	r3, [pc, #296]	; (800060c <GPIO_Init+0x194>)
 80004e2:	68db      	ldr	r3, [r3, #12]
 80004e4:	687a      	ldr	r2, [r7, #4]
 80004e6:	7912      	ldrb	r2, [r2, #4]
 80004e8:	4611      	mov	r1, r2
 80004ea:	2201      	movs	r2, #1
 80004ec:	408a      	lsls	r2, r1
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a46      	ldr	r2, [pc, #280]	; (800060c <GPIO_Init+0x194>)
 80004f2:	430b      	orrs	r3, r1
 80004f4:	60d3      	str	r3, [r2, #12]
			// clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f6:	4b45      	ldr	r3, [pc, #276]	; (800060c <GPIO_Init+0x194>)
 80004f8:	689b      	ldr	r3, [r3, #8]
 80004fa:	687a      	ldr	r2, [r7, #4]
 80004fc:	7912      	ldrb	r2, [r2, #4]
 80004fe:	4611      	mov	r1, r2
 8000500:	2201      	movs	r2, #1
 8000502:	408a      	lsls	r2, r1
 8000504:	43d2      	mvns	r2, r2
 8000506:	4611      	mov	r1, r2
 8000508:	4a40      	ldr	r2, [pc, #256]	; (800060c <GPIO_Init+0x194>)
 800050a:	400b      	ands	r3, r1
 800050c:	6093      	str	r3, [r2, #8]
 800050e:	e035      	b.n	800057c <GPIO_Init+0x104>
		}

		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT)
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	795b      	ldrb	r3, [r3, #5]
 8000514:	2b05      	cmp	r3, #5
 8000516:	d117      	bne.n	8000548 <GPIO_Init+0xd0>
		{
			//1. Configure the RTSR
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000518:	4b3c      	ldr	r3, [pc, #240]	; (800060c <GPIO_Init+0x194>)
 800051a:	689b      	ldr	r3, [r3, #8]
 800051c:	687a      	ldr	r2, [r7, #4]
 800051e:	7912      	ldrb	r2, [r2, #4]
 8000520:	4611      	mov	r1, r2
 8000522:	2201      	movs	r2, #1
 8000524:	408a      	lsls	r2, r1
 8000526:	4611      	mov	r1, r2
 8000528:	4a38      	ldr	r2, [pc, #224]	; (800060c <GPIO_Init+0x194>)
 800052a:	430b      	orrs	r3, r1
 800052c:	6093      	str	r3, [r2, #8]
			// clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052e:	4b37      	ldr	r3, [pc, #220]	; (800060c <GPIO_Init+0x194>)
 8000530:	68db      	ldr	r3, [r3, #12]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	43d2      	mvns	r2, r2
 800053e:	4611      	mov	r1, r2
 8000540:	4a32      	ldr	r2, [pc, #200]	; (800060c <GPIO_Init+0x194>)
 8000542:	400b      	ands	r3, r1
 8000544:	60d3      	str	r3, [r2, #12]
 8000546:	e019      	b.n	800057c <GPIO_Init+0x104>
		}

		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT)
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	795b      	ldrb	r3, [r3, #5]
 800054c:	2b06      	cmp	r3, #6
 800054e:	d115      	bne.n	800057c <GPIO_Init+0x104>
		{
			//1. Configure bothh RTSR and FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000550:	4b2e      	ldr	r3, [pc, #184]	; (800060c <GPIO_Init+0x194>)
 8000552:	68db      	ldr	r3, [r3, #12]
 8000554:	687a      	ldr	r2, [r7, #4]
 8000556:	7912      	ldrb	r2, [r2, #4]
 8000558:	4611      	mov	r1, r2
 800055a:	2201      	movs	r2, #1
 800055c:	408a      	lsls	r2, r1
 800055e:	4611      	mov	r1, r2
 8000560:	4a2a      	ldr	r2, [pc, #168]	; (800060c <GPIO_Init+0x194>)
 8000562:	430b      	orrs	r3, r1
 8000564:	60d3      	str	r3, [r2, #12]
			// clear the corresponding RTSR bit
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000566:	4b29      	ldr	r3, [pc, #164]	; (800060c <GPIO_Init+0x194>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	4611      	mov	r1, r2
 8000576:	4a25      	ldr	r2, [pc, #148]	; (800060c <GPIO_Init+0x194>)
 8000578:	430b      	orrs	r3, r1
 800057a:	6093      	str	r3, [r2, #8]

		}
		//2. COnfigure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	089b      	lsrs	r3, r3, #2
 8000582:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	f003 0303 	and.w	r3, r3, #3
 800058c:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIOA_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	681b      	ldr	r3, [r3, #0]
 8000592:	4a1f      	ldr	r2, [pc, #124]	; (8000610 <GPIO_Init+0x198>)
 8000594:	4293      	cmp	r3, r2
 8000596:	d04d      	beq.n	8000634 <GPIO_Init+0x1bc>
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	4a1d      	ldr	r2, [pc, #116]	; (8000614 <GPIO_Init+0x19c>)
 800059e:	4293      	cmp	r3, r2
 80005a0:	d032      	beq.n	8000608 <GPIO_Init+0x190>
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	4a1c      	ldr	r2, [pc, #112]	; (8000618 <GPIO_Init+0x1a0>)
 80005a8:	4293      	cmp	r3, r2
 80005aa:	d02b      	beq.n	8000604 <GPIO_Init+0x18c>
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	4a1a      	ldr	r2, [pc, #104]	; (800061c <GPIO_Init+0x1a4>)
 80005b2:	4293      	cmp	r3, r2
 80005b4:	d024      	beq.n	8000600 <GPIO_Init+0x188>
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	4a19      	ldr	r2, [pc, #100]	; (8000620 <GPIO_Init+0x1a8>)
 80005bc:	4293      	cmp	r3, r2
 80005be:	d01d      	beq.n	80005fc <GPIO_Init+0x184>
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	4a17      	ldr	r2, [pc, #92]	; (8000624 <GPIO_Init+0x1ac>)
 80005c6:	4293      	cmp	r3, r2
 80005c8:	d016      	beq.n	80005f8 <GPIO_Init+0x180>
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	4a16      	ldr	r2, [pc, #88]	; (8000628 <GPIO_Init+0x1b0>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d00f      	beq.n	80005f4 <GPIO_Init+0x17c>
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4a14      	ldr	r2, [pc, #80]	; (800062c <GPIO_Init+0x1b4>)
 80005da:	4293      	cmp	r3, r2
 80005dc:	d008      	beq.n	80005f0 <GPIO_Init+0x178>
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	4a13      	ldr	r2, [pc, #76]	; (8000630 <GPIO_Init+0x1b8>)
 80005e4:	4293      	cmp	r3, r2
 80005e6:	d101      	bne.n	80005ec <GPIO_Init+0x174>
 80005e8:	2308      	movs	r3, #8
 80005ea:	e024      	b.n	8000636 <GPIO_Init+0x1be>
 80005ec:	2300      	movs	r3, #0
 80005ee:	e022      	b.n	8000636 <GPIO_Init+0x1be>
 80005f0:	2307      	movs	r3, #7
 80005f2:	e020      	b.n	8000636 <GPIO_Init+0x1be>
 80005f4:	2306      	movs	r3, #6
 80005f6:	e01e      	b.n	8000636 <GPIO_Init+0x1be>
 80005f8:	2305      	movs	r3, #5
 80005fa:	e01c      	b.n	8000636 <GPIO_Init+0x1be>
 80005fc:	2304      	movs	r3, #4
 80005fe:	e01a      	b.n	8000636 <GPIO_Init+0x1be>
 8000600:	2303      	movs	r3, #3
 8000602:	e018      	b.n	8000636 <GPIO_Init+0x1be>
 8000604:	2302      	movs	r3, #2
 8000606:	e016      	b.n	8000636 <GPIO_Init+0x1be>
 8000608:	2301      	movs	r3, #1
 800060a:	e014      	b.n	8000636 <GPIO_Init+0x1be>
 800060c:	40013c00 	.word	0x40013c00
 8000610:	40020000 	.word	0x40020000
 8000614:	40020400 	.word	0x40020400
 8000618:	40020800 	.word	0x40020800
 800061c:	40020c00 	.word	0x40020c00
 8000620:	40021000 	.word	0x40021000
 8000624:	40021400 	.word	0x40021400
 8000628:	40021800 	.word	0x40021800
 800062c:	40021c00 	.word	0x40021c00
 8000630:	40022000 	.word	0x40022000
 8000634:	2300      	movs	r3, #0
 8000636:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000638:	4b5d      	ldr	r3, [pc, #372]	; (80007b0 <GPIO_Init+0x338>)
 800063a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800063c:	4a5c      	ldr	r2, [pc, #368]	; (80007b0 <GPIO_Init+0x338>)
 800063e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000642:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1]=portcode << (temp2*4);
 8000644:	7c7a      	ldrb	r2, [r7, #17]
 8000646:	7cbb      	ldrb	r3, [r7, #18]
 8000648:	009b      	lsls	r3, r3, #2
 800064a:	fa02 f103 	lsl.w	r1, r2, r3
 800064e:	4a59      	ldr	r2, [pc, #356]	; (80007b4 <GPIO_Init+0x33c>)
 8000650:	7cfb      	ldrb	r3, [r7, #19]
 8000652:	3302      	adds	r3, #2
 8000654:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. ENable the Exti intrrupt delivery using IMR
		EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000658:	4b57      	ldr	r3, [pc, #348]	; (80007b8 <GPIO_Init+0x340>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	687a      	ldr	r2, [r7, #4]
 800065e:	7912      	ldrb	r2, [r2, #4]
 8000660:	4611      	mov	r1, r2
 8000662:	2201      	movs	r2, #1
 8000664:	408a      	lsls	r2, r1
 8000666:	4611      	mov	r1, r2
 8000668:	4a53      	ldr	r2, [pc, #332]	; (80007b8 <GPIO_Init+0x340>)
 800066a:	430b      	orrs	r3, r1
 800066c:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 800066e:	2300      	movs	r3, #0
 8000670:	617b      	str	r3, [r7, #20]

	// Configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	799b      	ldrb	r3, [r3, #6]
 8000676:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	791b      	ldrb	r3, [r3, #4]
 800067c:	005b      	lsls	r3, r3, #1
 800067e:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed
 8000682:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	689a      	ldr	r2, [r3, #8]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	791b      	ldrb	r3, [r3, #4]
 800068e:	4619      	mov	r1, r3
 8000690:	2303      	movs	r3, #3
 8000692:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x03
 8000694:	43db      	mvns	r3, r3
 8000696:	4619      	mov	r1, r3
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	400a      	ands	r2, r1
 800069e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	6899      	ldr	r1, [r3, #8]
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	697a      	ldr	r2, [r7, #20]
 80006ac:	430a      	orrs	r2, r1
 80006ae:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006b0:	2300      	movs	r3, #0
 80006b2:	617b      	str	r3, [r7, #20]

	// Configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	79db      	ldrb	r3, [r3, #7]
 80006b8:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	791b      	ldrb	r3, [r3, #4]
 80006be:	005b      	lsls	r3, r3, #1
 80006c0:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl
 80006c4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	681b      	ldr	r3, [r3, #0]
 80006ca:	68da      	ldr	r2, [r3, #12]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	791b      	ldrb	r3, [r3, #4]
 80006d0:	4619      	mov	r1, r3
 80006d2:	2303      	movs	r3, #3
 80006d4:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x03
 80006d6:	43db      	mvns	r3, r3
 80006d8:	4619      	mov	r1, r3
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	400a      	ands	r2, r1
 80006e0:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	68d9      	ldr	r1, [r3, #12]
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	697a      	ldr	r2, [r7, #20]
 80006ee:	430a      	orrs	r2, r1
 80006f0:	60da      	str	r2, [r3, #12]

	temp = 0;
 80006f2:	2300      	movs	r3, #0
 80006f4:	617b      	str	r3, [r7, #20]

	//configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	7a1b      	ldrb	r3, [r3, #8]
 80006fa:	461a      	mov	r2, r3
			<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	791b      	ldrb	r3, [r3, #4]
 8000700:	005b      	lsls	r3, r3, #1
 8000702:	fa02 f303 	lsl.w	r3, r2, r3
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType
 8000706:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	685a      	ldr	r2, [r3, #4]
			<< pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	791b      	ldrb	r3, [r3, #4]
 8000712:	4619      	mov	r1, r3
 8000714:	2301      	movs	r3, #1
 8000716:	408b      	lsls	r3, r1
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1
 8000718:	43db      	mvns	r3, r3
 800071a:	4619      	mov	r1, r3
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	400a      	ands	r2, r1
 8000722:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	6859      	ldr	r1, [r3, #4]
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	697a      	ldr	r2, [r7, #20]
 8000730:	430a      	orrs	r2, r1
 8000732:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000734:	2300      	movs	r3, #0
 8000736:	617b      	str	r3, [r7, #20]

	// configure the alternate functionality
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	795b      	ldrb	r3, [r3, #5]
 800073c:	2b02      	cmp	r3, #2
 800073e:	d132      	bne.n	80007a6 <GPIO_Init+0x32e>
		uint32_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	791b      	ldrb	r3, [r3, #4]
 8000744:	08db      	lsrs	r3, r3, #3
 8000746:	b2db      	uxtb	r3, r3
 8000748:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	791b      	ldrb	r3, [r3, #4]
 800074e:	f003 0307 	and.w	r3, r3, #7
 8000752:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	68fa      	ldr	r2, [r7, #12]
 800075a:	3208      	adds	r2, #8
 800075c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000760:	68bb      	ldr	r3, [r7, #8]
 8000762:	009b      	lsls	r3, r3, #2
 8000764:	210f      	movs	r1, #15
 8000766:	fa01 f303 	lsl.w	r3, r1, r3
 800076a:	43db      	mvns	r3, r3
 800076c:	4619      	mov	r1, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	4011      	ands	r1, r2
 8000774:	68fa      	ldr	r2, [r7, #12]
 8000776:	3208      	adds	r2, #8
 8000778:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	68fa      	ldr	r2, [r7, #12]
 8000782:	3208      	adds	r2, #8
 8000784:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
				(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	7a5b      	ldrb	r3, [r3, #9]
 800078c:	4619      	mov	r1, r3
 800078e:	68bb      	ldr	r3, [r7, #8]
 8000790:	009b      	lsls	r3, r3, #2
 8000792:	fa01 f303 	lsl.w	r3, r1, r3
 8000796:	4619      	mov	r1, r3
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	4311      	orrs	r1, r2
 800079e:	68fa      	ldr	r2, [r7, #12]
 80007a0:	3208      	adds	r2, #8
 80007a2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007a6:	bf00      	nop
 80007a8:	3718      	adds	r7, #24
 80007aa:	46bd      	mov	sp, r7
 80007ac:	bd80      	pop	{r7, pc}
 80007ae:	bf00      	nop
 80007b0:	40023800 	.word	0x40023800
 80007b4:	40013800 	.word	0x40013800
 80007b8:	40013c00 	.word	0x40013c00

080007bc <GPIO_ToggleOutputPin>:

void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value) {
	pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 80007bc:	b480      	push	{r7}
 80007be:	b083      	sub	sp, #12
 80007c0:	af00      	add	r7, sp, #0
 80007c2:	6078      	str	r0, [r7, #4]
 80007c4:	460b      	mov	r3, r1
 80007c6:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	695b      	ldr	r3, [r3, #20]
 80007cc:	78fa      	ldrb	r2, [r7, #3]
 80007ce:	2101      	movs	r1, #1
 80007d0:	fa01 f202 	lsl.w	r2, r1, r2
 80007d4:	405a      	eors	r2, r3
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	615a      	str	r2, [r3, #20]
}
 80007da:	bf00      	nop
 80007dc:	370c      	adds	r7, #12
 80007de:	46bd      	mov	sp, r7
 80007e0:	bc80      	pop	{r7}
 80007e2:	4770      	bx	lr

080007e4 <__libc_init_array>:
 80007e4:	b570      	push	{r4, r5, r6, lr}
 80007e6:	4d0d      	ldr	r5, [pc, #52]	; (800081c <__libc_init_array+0x38>)
 80007e8:	4c0d      	ldr	r4, [pc, #52]	; (8000820 <__libc_init_array+0x3c>)
 80007ea:	1b64      	subs	r4, r4, r5
 80007ec:	10a4      	asrs	r4, r4, #2
 80007ee:	2600      	movs	r6, #0
 80007f0:	42a6      	cmp	r6, r4
 80007f2:	d109      	bne.n	8000808 <__libc_init_array+0x24>
 80007f4:	4d0b      	ldr	r5, [pc, #44]	; (8000824 <__libc_init_array+0x40>)
 80007f6:	4c0c      	ldr	r4, [pc, #48]	; (8000828 <__libc_init_array+0x44>)
 80007f8:	f000 f818 	bl	800082c <_init>
 80007fc:	1b64      	subs	r4, r4, r5
 80007fe:	10a4      	asrs	r4, r4, #2
 8000800:	2600      	movs	r6, #0
 8000802:	42a6      	cmp	r6, r4
 8000804:	d105      	bne.n	8000812 <__libc_init_array+0x2e>
 8000806:	bd70      	pop	{r4, r5, r6, pc}
 8000808:	f855 3b04 	ldr.w	r3, [r5], #4
 800080c:	4798      	blx	r3
 800080e:	3601      	adds	r6, #1
 8000810:	e7ee      	b.n	80007f0 <__libc_init_array+0xc>
 8000812:	f855 3b04 	ldr.w	r3, [r5], #4
 8000816:	4798      	blx	r3
 8000818:	3601      	adds	r6, #1
 800081a:	e7f2      	b.n	8000802 <__libc_init_array+0x1e>
 800081c:	08000844 	.word	0x08000844
 8000820:	08000844 	.word	0x08000844
 8000824:	08000844 	.word	0x08000844
 8000828:	08000848 	.word	0x08000848

0800082c <_init>:
 800082c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800082e:	bf00      	nop
 8000830:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000832:	bc08      	pop	{r3}
 8000834:	469e      	mov	lr, r3
 8000836:	4770      	bx	lr

08000838 <_fini>:
 8000838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800083a:	bf00      	nop
 800083c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800083e:	bc08      	pop	{r3}
 8000840:	469e      	mov	lr, r3
 8000842:	4770      	bx	lr
